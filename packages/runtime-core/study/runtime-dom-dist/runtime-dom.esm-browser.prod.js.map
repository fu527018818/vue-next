{"version":3,"file":"runtime-dom.esm-browser.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/globalsWhitelist.ts","../../shared/src/domAttrConfig.ts","../../shared/src/normalizeProp.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/helpers/withRenderContext.ts","../../runtime-core/src/helpers/scopeId.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/devtools.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/componentProxy.ts","../../runtime-core/src/apiComputed.ts","../../reactivity/src/computed.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/index.ts","../src/nodeOps.ts","../src/modules/style.ts","../src/modules/attrs.ts","../src/modules/events.ts","../src/patchProp.ts","../src/helpers/useCssModule.ts","../src/helpers/useCssVars.ts","../src/components/Transition.ts","../src/components/TransitionGroup.ts","../src/directives/vModel.ts","../src/directives/vOn.ts","../src/directives/vShow.ts","../src/index.ts","../src/modules/class.ts","../src/modules/props.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean\r\n): (key: string) => boolean {\r\n  const map: Record<string, boolean> = Object.create(null)\r\n  const list: Array<string> = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_WHITE_LISTED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl'\r\n\r\nexport const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`\r\n)\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv'\r\n}\r\n\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nexport const isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(\r\n  `animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`\r\n)\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`\r\n)\r\n","import { isArray, isString, isObject, hyphenate } from './'\r\nimport { isNoUnitNumericStyleProp } from './domAttrConfig'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(value: unknown): NormalizedStyle | undefined {\r\n  if (isArray(value)) {\r\n    const res: Record<string, string | number> = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = normalizeStyle(\r\n        isString(item) ? parseStringStyle(item) : item\r\n      )\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:(.+)/\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText.split(listDelimiterRE).forEach(item => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE)\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(styles: NormalizedStyle | undefined): string {\r\n  let ret = ''\r\n  if (!styles) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (\r\n      isString(value) ||\r\n      (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))\r\n    ) {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      res += normalizeClass(value[i]) + ' '\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n","import { isArray, isDate, isObject } from './'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import { isArray, isObject, isPlainObject } from './index'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return val == null\r\n    ? ''\r\n    : isObject(val)\r\n      ? JSON.stringify(val, replacer, 2)\r\n      : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any) => {\r\n  if (val instanceof Map) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n        ;(entries as any)[`${key} =>`] = val\r\n        return entries\r\n      }, {})\r\n    }\r\n  } else if (val instanceof Set) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    }\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport { makeMap }\r\nexport * from './patchFlags'\r\nexport * from './shapeFlags'\r\nexport * from './slotFlags'\r\nexport * from './globalsWhitelist'\r\nexport * from './codeframe'\r\nexport * from './normalizeProp'\r\nexport * from './domTagConfig'\r\nexport * from './domAttrConfig'\r\nexport * from './escapeHtml'\r\nexport * from './looseEqual'\r\nexport * from './toDisplayString'\r\n\r\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nexport const babelParserDefautPlugins = [\r\n  'bigInt',\r\n  'optionalChaining',\r\n  'nullishCoalescingOperator'\r\n] as const\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR: [] = []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nconst onRE = /^on[^a-z]/\r\nexport const isOn = (key: string) => onRE.test(key)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isDate = (val: unknown): val is Date => val instanceof Date\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  'key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as any\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction(\r\n  (str: string): string => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n  }\r\n)\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction(\r\n  (str: string): string => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase()\r\n  }\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(\r\n  (str: string): string => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1)\r\n  }\r\n)\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  value !== oldValue && (value === value || oldValue === oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value\r\n  })\r\n}\r\n\r\nexport const toNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n          ? self\r\n          : typeof window !== 'undefined'\r\n            ? window\r\n            : typeof global !== 'undefined'\r\n              ? global\r\n              : {})\r\n  )\r\n}\r\n","import { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { EMPTY_OBJ, isArray } from '@vue/shared'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Sets to reduce memory overhead.\r\ntype Dep = Set<ReactiveEffect>\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\n\r\nexport interface ReactiveEffect<T = any> {\r\n  (): T\r\n  _isEffect: true\r\n  id: number\r\n  active: boolean\r\n  raw: () => T\r\n  deps: Array<Dep>\r\n  options: ReactiveEffectOptions\r\n}\r\n\r\nexport interface ReactiveEffectOptions {\r\n  lazy?: boolean\r\n  scheduler?: (job: ReactiveEffect) => void\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n  onStop?: () => void\r\n}\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n} & DebuggerEventExtraInfo\r\n\r\nexport interface DebuggerEventExtraInfo {\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nconst effectStack: ReactiveEffect[] = []\r\nlet activeEffect: ReactiveEffect | undefined\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\nexport function isEffect(fn: any): fn is ReactiveEffect {\r\n  return fn && fn._isEffect === true\r\n}\r\n\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options: ReactiveEffectOptions = EMPTY_OBJ\r\n): ReactiveEffect<T> {\r\n  if (isEffect(fn)) {\r\n    fn = fn.raw\r\n  }\r\n  const effect = createReactiveEffect(fn, options)\r\n  if (!options.lazy) {\r\n    effect()\r\n  }\r\n  return effect\r\n}\r\n\r\nexport function stop(effect: ReactiveEffect) {\r\n  if (effect.active) {\r\n    cleanup(effect)\r\n    if (effect.options.onStop) {\r\n      effect.options.onStop()\r\n    }\r\n    effect.active = false\r\n  }\r\n}\r\n\r\nlet uid = 0\r\n\r\nfunction createReactiveEffect<T = any>(\r\n  fn: () => T,\r\n  options: ReactiveEffectOptions\r\n): ReactiveEffect<T> {\r\n  const effect = function reactiveEffect(): unknown {\r\n    if (!effect.active) {\r\n      return options.scheduler ? undefined : fn()\r\n    }\r\n    if (!effectStack.includes(effect)) {\r\n      cleanup(effect)\r\n      try {\r\n        enableTracking()\r\n        effectStack.push(effect)\r\n        activeEffect = effect\r\n        return fn()\r\n      } finally {\r\n        effectStack.pop()\r\n        resetTracking()\r\n        activeEffect = effectStack[effectStack.length - 1]\r\n      }\r\n    }\r\n  } as ReactiveEffect\r\n  effect.id = uid++\r\n  effect._isEffect = true\r\n  effect.active = true\r\n  effect.raw = fn\r\n  effect.deps = []\r\n  effect.options = options\r\n  return effect\r\n}\r\n\r\nfunction cleanup(effect: ReactiveEffect) {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\n\r\nlet shouldTrack = true\r\nconst trackStack: boolean[] = []\r\n\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  if (!shouldTrack || activeEffect === undefined) {\r\n    return\r\n  }\r\n  let depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    targetMap.set(target, (depsMap = new Map()))\r\n  }\r\n  let dep = depsMap.get(key)\r\n  if (!dep) {\r\n    depsMap.set(key, (dep = new Set()))\r\n  }\r\n  if (!dep.has(activeEffect)) {\r\n    dep.add(activeEffect)\r\n    activeEffect.deps.push(dep)\r\n    if (__DEV__ && activeEffect.options.onTrack) {\r\n      activeEffect.options.onTrack({\r\n        effect: activeEffect,\r\n        target,\r\n        type,\r\n        key\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  const effects = new Set<ReactiveEffect>()\r\n  const add = (effectsToAdd: Set<ReactiveEffect> | undefined) => {\r\n    if (effectsToAdd) {\r\n      effectsToAdd.forEach(effect => effects.add(effect))\r\n    }\r\n  }\r\n\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    depsMap.forEach(add)\r\n  } else if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key >= (newValue as number)) {\r\n        add(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      add(depsMap.get(key))\r\n    }\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    const isAddOrDelete =\r\n      type === TriggerOpTypes.ADD ||\r\n      (type === TriggerOpTypes.DELETE && !isArray(target))\r\n    if (\r\n      isAddOrDelete ||\r\n      (type === TriggerOpTypes.SET && target instanceof Map)\r\n    ) {\r\n      add(depsMap.get(isArray(target) ? 'length' : ITERATE_KEY))\r\n    }\r\n    if (isAddOrDelete && target instanceof Map) {\r\n      add(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n    }\r\n  }\r\n\r\n  const run = (effect: ReactiveEffect) => {\r\n    if (__DEV__ && effect.options.onTrigger) {\r\n      effect.options.onTrigger({\r\n        effect,\r\n        target,\r\n        key,\r\n        type,\r\n        newValue,\r\n        oldValue,\r\n        oldTarget\r\n      })\r\n    }\r\n    if (effect.options.scheduler) {\r\n      effect.options.scheduler(effect)\r\n    } else {\r\n      effect()\r\n    }\r\n  }\r\n\r\n  effects.forEach(run)\r\n}\r\n","import { reactive, readonly, toRaw, ReactiveFlags } from './reactive'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { track, trigger, ITERATE_KEY } from './effect'\r\nimport {\r\n  isObject,\r\n  hasOwn,\r\n  isSymbol,\r\n  hasChanged,\r\n  isArray,\r\n  extend\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\n\r\nconst builtInSymbols = new Set(\r\n  Object.getOwnPropertyNames(Symbol)\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol)\r\n)\r\n\r\nconst get = /*#__PURE__*/ createGetter()\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true)\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true)\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true)\r\n\r\nconst arrayInstrumentations: Record<string, Function> = {}\r\n;['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n  arrayInstrumentations[key] = function(...args: any[]): any {\r\n    const arr = toRaw(this) as any\r\n    for (let i = 0, l = (this as any).length; i < l; i++) {\r\n      track(arr, TrackOpTypes.GET, i + '')\r\n    }\r\n    // we run the method using the original args first (which may be reactive)\r\n    const res = arr[key](...args)\r\n    if (res === -1 || res === false) {\r\n      // if that didn't work, run it again using raw values.\r\n      return arr[key](...args.map(toRaw))\r\n    } else {\r\n      return res\r\n    }\r\n  }\r\n})\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target: object, key: string | symbol, receiver: object) {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (\r\n      key === ReactiveFlags.RAW &&\r\n      receiver ===\r\n        (isReadonly\r\n          ? (target as any)[ReactiveFlags.READONLY]\r\n          : (target as any)[ReactiveFlags.REACTIVE])\r\n    ) {\r\n      return target\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n    if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n      return Reflect.get(arrayInstrumentations, key, receiver)\r\n    }\r\n\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (\r\n      isSymbol(key)\r\n        ? builtInSymbols.has(key)\r\n        : key === `__proto__` || key === `__v_isRef`\r\n    ) {\r\n      return res\r\n    }\r\n\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n\r\n    if (shallow) {\r\n      return res\r\n    }\r\n\r\n    if (isRef(res)) {\r\n      // ref unwrapping, only for Objects, not for Arrays.\r\n      return targetIsArray ? res : res.value\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nconst set = /*#__PURE__*/ createSetter()\r\nconst shallowSet = /*#__PURE__*/ createSetter(true)\r\n\r\nfunction createSetter(shallow = false) {\r\n  return function set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object\r\n  ): boolean {\r\n    const oldValue = (target as any)[key]\r\n    if (!shallow) {\r\n      value = toRaw(value)\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value\r\n        return true\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey = hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nfunction deleteProperty(target: object, key: string | symbol): boolean {\r\n  const hadKey = hasOwn(target, key)\r\n  const oldValue = (target as any)[key]\r\n  const result = Reflect.deleteProperty(target, key)\r\n  if (result && hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction has(target: object, key: string | symbol): boolean {\r\n  const result = Reflect.has(target, key)\r\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction ownKeys(target: object): (string | number | symbol)[] {\r\n  track(target, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.ownKeys(target)\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n  deleteProperty,\r\n  has,\r\n  ownKeys\r\n}\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  has,\r\n  ownKeys,\r\n  set(target, key) {\r\n    if (__DEV__) {\r\n      console.warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  },\r\n  deleteProperty(target, key) {\r\n    if (__DEV__) {\r\n      console.warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const shallowReactiveHandlers: ProxyHandler<object> = extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n  }\r\n)\r\n\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nexport const shallowReadonlyHandlers: ProxyHandler<object> = extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet\r\n  }\r\n)\r\n","import { toRaw, reactive, readonly, ReactiveFlags } from './reactive'\r\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  isObject,\r\n  capitalize,\r\n  hasOwn,\r\n  hasChanged,\r\n  toRawType\r\n} from '@vue/shared'\r\n\r\nexport type CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\nconst toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value) : value\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  wrap: typeof toReactive | typeof toReadonly | typeof toShallow\r\n) {\r\n  target = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (key !== rawKey) {\r\n    track(target, TrackOpTypes.GET, key)\r\n  }\r\n  track(target, TrackOpTypes.GET, rawKey)\r\n  const { has, get } = getProto(target)\r\n  if (has.call(target, key)) {\r\n    return wrap(get.call(target, key))\r\n  } else if (has.call(target, rawKey)) {\r\n    return wrap(get.call(target, rawKey))\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown): boolean {\r\n  const target = toRaw(this)\r\n  const rawKey = toRaw(key)\r\n  if (key !== rawKey) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  track(target, TrackOpTypes.HAS, rawKey)\r\n  const has = getProto(target).has\r\n  return has.call(target, key) || has.call(target, rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections) {\r\n  target = toRaw(target)\r\n  track(target, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(getProto(target), 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  const result = proto.add.call(target, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get, set } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  const result = set.call(target, key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get, delete: del } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = del.call(target, key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? target instanceof Map\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = getProto(target).clear.call(target)\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, shallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown\r\n  ) {\r\n    const observed = this\r\n    const target = toRaw(observed)\r\n    const wrap = isReadonly ? toReadonly : shallow ? toShallow : toReactive\r\n    !isReadonly && track(target, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    // important: create sure the callback is\r\n    // 1. invoked with the reactive map as `this` and 3rd arg\r\n    // 2. the value received should be a corresponding reactive/readonly.\r\n    function wrappedCallback(value: unknown, key: unknown) {\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    }\r\n    return getProto(target).forEach.call(target, wrappedCallback)\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  shallow: boolean\r\n) {\r\n  return function(\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = toRaw(this)\r\n    const isMap = target instanceof Map\r\n    const isPair = method === 'entries' || (method === Symbol.iterator && isMap)\r\n    const isKeyOnly = method === 'keys' && isMap\r\n    const innerIterator = getProto(target)[method].apply(target, args)\r\n    const wrap = isReadonly ? toReadonly : shallow ? toShallow : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        target,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function(this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this)\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE ? false : this\r\n  }\r\n}\r\n\r\nconst mutableInstrumentations: Record<string, Function> = {\r\n  get(this: MapTypes, key: unknown) {\r\n    return get(this, key, toReactive)\r\n  },\r\n  get size() {\r\n    return size((this as unknown) as IterableCollections)\r\n  },\r\n  has,\r\n  add,\r\n  set,\r\n  delete: deleteEntry,\r\n  clear,\r\n  forEach: createForEach(false, false)\r\n}\r\n\r\nconst shallowInstrumentations: Record<string, Function> = {\r\n  get(this: MapTypes, key: unknown) {\r\n    return get(this, key, toShallow)\r\n  },\r\n  get size() {\r\n    return size((this as unknown) as IterableCollections)\r\n  },\r\n  has,\r\n  add,\r\n  set,\r\n  delete: deleteEntry,\r\n  clear,\r\n  forEach: createForEach(false, true)\r\n}\r\n\r\nconst readonlyInstrumentations: Record<string, Function> = {\r\n  get(this: MapTypes, key: unknown) {\r\n    return get(this, key, toReadonly)\r\n  },\r\n  get size() {\r\n    return size((this as unknown) as IterableCollections)\r\n  },\r\n  has,\r\n  add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n  set: createReadonlyMethod(TriggerOpTypes.SET),\r\n  delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n  clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n  forEach: createForEach(true, false)\r\n}\r\n\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\niteratorMethods.forEach(method => {\r\n  mutableInstrumentations[method as string] = createIterableMethod(\r\n    method,\r\n    false,\r\n    false\r\n  )\r\n  readonlyInstrumentations[method as string] = createIterableMethod(\r\n    method,\r\n    true,\r\n    false\r\n  )\r\n  shallowInstrumentations[method as string] = createIterableMethod(\r\n    method,\r\n    false,\r\n    true\r\n  )\r\n})\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? shallowInstrumentations\r\n    : isReadonly\r\n      ? readonlyInstrumentations\r\n      : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: createInstrumentationGetter(false, false)\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: createInstrumentationGetter(false, true)\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: createInstrumentationGetter(true, false)\r\n}\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? `as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`\r\n    )\r\n  }\r\n}\r\n","import { isObject, toRawType, def, hasOwn, makeMap } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers\r\n} from './collectionHandlers'\r\nimport { UnwrapRef, Ref } from './ref'\r\n\r\nexport const enum ReactiveFlags {\r\n  SKIP = '__v_skip',\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  RAW = '__v_raw',\r\n  REACTIVE = '__v_reactive',\r\n  READONLY = '__v_readonly'\r\n}\r\n\r\ninterface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n  [ReactiveFlags.REACTIVE]?: any\r\n  [ReactiveFlags.READONLY]?: any\r\n}\r\n\r\nconst collectionTypes = new Set<Function>([Set, Map, WeakMap, WeakSet])\r\nconst isObservableType = /*#__PURE__*/ makeMap(\r\n  'Object,Array,Map,Set,WeakMap,WeakSet'\r\n)\r\n\r\nconst canObserve = (value: Target): boolean => {\r\n  return (\r\n    !value[ReactiveFlags.SKIP] &&\r\n    isObservableType(toRawType(value)) &&\r\n    Object.isExtensible(value)\r\n  )\r\n}\r\n\r\n// only unwrap nested ref\r\ntype UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRef<T>\r\n\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  if (target && (target as Target)[ReactiveFlags.IS_READONLY]) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers\r\n  )\r\n}\r\n\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nexport function shallowReactive<T extends object>(target: T): T {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n    ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n    : T extends ReadonlyMap<infer K, infer V>\r\n      ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n      : T extends WeakMap<infer K, infer V>\r\n        ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n        : T extends Set<infer U>\r\n          ? ReadonlySet<DeepReadonly<U>>\r\n          : T extends ReadonlySet<infer U>\r\n            ? ReadonlySet<DeepReadonly<U>>\r\n            : T extends WeakSet<infer U>\r\n              ? WeakSet<DeepReadonly<U>>\r\n              : T extends Promise<infer U>\r\n                ? Promise<DeepReadonly<U>>\r\n                : T extends {}\r\n                  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n                  : Readonly<T>\r\n\r\nexport function readonly<T extends object>(\r\n  target: T\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers\r\n  )\r\n}\r\n\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nexport function shallowReadonly<T extends object>(\r\n  target: T\r\n): Readonly<{ [K in keyof T]: UnwrapNestedRefs<T[K]> }> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    readonlyCollectionHandlers\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>\r\n) {\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const reactiveFlag = isReadonly\r\n    ? ReactiveFlags.READONLY\r\n    : ReactiveFlags.REACTIVE\r\n  if (hasOwn(target, reactiveFlag)) {\r\n    return target[reactiveFlag]\r\n  }\r\n  // only a whitelist of value types can be observed.\r\n  if (!canObserve(target)) {\r\n    return target\r\n  }\r\n  const observed = new Proxy(\r\n    target,\r\n    collectionTypes.has(target.constructor) ? collectionHandlers : baseHandlers\r\n  )\r\n  def(target, reactiveFlag, observed)\r\n  return observed\r\n}\r\n\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\nexport function toRaw<T>(observed: T): T {\r\n  return (\r\n    (observed && toRaw((observed as Target)[ReactiveFlags.RAW])) || observed\r\n  )\r\n}\r\n\r\nexport function markRaw<T extends object>(value: T): T {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n","import { track, trigger } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { isObject, hasChanged } from '@vue/shared'\r\nimport { reactive, isProxy, toRaw, isReactive } from './reactive'\r\nimport { CollectionTypes } from './collectionHandlers'\r\n\r\ndeclare const RefSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n  value: T\r\n}\r\n\r\nexport type ToRefs<T = any> = { [K in keyof T]: Ref<T[K]> }\r\n\r\nconst convert = <T extends unknown>(val: T): T =>\r\n  isObject(val) ? reactive(val) : val\r\n\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return r ? r.__v_isRef === true : false\r\n}\r\n\r\nexport function ref<T extends object>(\r\n  value: T\r\n): T extends Ref ? T : Ref<UnwrapRef<T>>\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value)\r\n}\r\n\r\nexport function shallowRef<T>(value: T): T extends Ref ? T : Ref<T>\r\nexport function shallowRef<T = any>(): Ref<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow = false) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  let value = shallow ? rawValue : convert(rawValue)\r\n  const r = {\r\n    __v_isRef: true,\r\n    get value() {\r\n      track(r, TrackOpTypes.GET, 'value')\r\n      return value\r\n    },\r\n    set value(newVal) {\r\n      if (hasChanged(toRaw(newVal), rawValue)) {\r\n        rawValue = newVal\r\n        value = shallow ? newVal : convert(newVal)\r\n        trigger(r, TriggerOpTypes.SET, 'value', newVal)\r\n      }\r\n    }\r\n  }\r\n  return r\r\n}\r\n\r\nexport function triggerRef(ref: Ref) {\r\n  trigger(ref, TriggerOpTypes.SET, 'value', __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport function unref<T>(ref: T): T extends Ref<infer V> ? V : T {\r\n  return isRef(ref) ? (ref.value as any) : ref\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  }\r\n}\r\n\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  const { get, set } = factory(\r\n    () => track(r, TrackOpTypes.GET, 'value'),\r\n    () => trigger(r, TriggerOpTypes.SET, 'value')\r\n  )\r\n  const r = {\r\n    __v_isRef: true,\r\n    get value() {\r\n      return get()\r\n    },\r\n    set value(v) {\r\n      set(v)\r\n    }\r\n  }\r\n  return r as any\r\n}\r\n\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = {}\r\n  for (const key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K\r\n): Ref<T[K]> {\r\n  return {\r\n    __v_isRef: true,\r\n    get value(): any {\r\n      return object[key]\r\n    },\r\n    set value(newVal) {\r\n      object[key] = newVal\r\n    }\r\n  } as any\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Note that api-extractor somehow refuses to include `declare module`\r\n * augmentations in its generated d.ts, so we have to manually append them\r\n * to the final generated d.ts in our build process.\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: T[K] extends Ref<infer V> ? V : T[K]\r\n}\r\n\r\nexport type UnwrapRef<T> = T extends Ref<infer V>\r\n  ? UnwrapRefSimple<V>\r\n  : UnwrapRefSimple<T>\r\n\r\ntype UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | CollectionTypes\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  ? T\r\n  : T extends Array<any>\r\n    ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n    : T extends object ? UnwrappedObject<T> : T\r\n\r\n// Extract all known symbols from an object\r\n// when unwrapping Object the symbols are not `in keyof`, this should cover all the\r\n// known symbols\r\ntype SymbolExtract<T> = (T extends { [Symbol.asyncIterator]: infer V }\r\n  ? { [Symbol.asyncIterator]: V }\r\n  : {}) &\r\n  (T extends { [Symbol.hasInstance]: infer V }\r\n    ? { [Symbol.hasInstance]: V }\r\n    : {}) &\r\n  (T extends { [Symbol.isConcatSpreadable]: infer V }\r\n    ? { [Symbol.isConcatSpreadable]: V }\r\n    : {}) &\r\n  (T extends { [Symbol.iterator]: infer V } ? { [Symbol.iterator]: V } : {}) &\r\n  (T extends { [Symbol.match]: infer V } ? { [Symbol.match]: V } : {}) &\r\n  (T extends { [Symbol.matchAll]: infer V } ? { [Symbol.matchAll]: V } : {}) &\r\n  (T extends { [Symbol.replace]: infer V } ? { [Symbol.replace]: V } : {}) &\r\n  (T extends { [Symbol.search]: infer V } ? { [Symbol.search]: V } : {}) &\r\n  (T extends { [Symbol.species]: infer V } ? { [Symbol.species]: V } : {}) &\r\n  (T extends { [Symbol.split]: infer V } ? { [Symbol.split]: V } : {}) &\r\n  (T extends { [Symbol.toPrimitive]: infer V }\r\n    ? { [Symbol.toPrimitive]: V }\r\n    : {}) &\r\n  (T extends { [Symbol.toStringTag]: infer V }\r\n    ? { [Symbol.toStringTag]: V }\r\n    : {}) &\r\n  (T extends { [Symbol.unscopables]: infer V }\r\n    ? { [Symbol.unscopables]: V }\r\n    : {})\r\n\r\ntype UnwrappedObject<T> = { [P in keyof T]: UnwrapRef<T[P]> } & SymbolExtract<T>\r\n","import { VNode } from './vnode'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  Component,\r\n  formatComponentName\r\n} from './component'\r\nimport { isString, isFunction } from '@vue/shared'\r\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: Component\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\r\n          )\r\n          .join('\\n'),\r\n        trace\r\n      ]\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nfunction getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n","import { VNode } from './vnode'\r\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\r\nimport { warn, pushWarningContext, popWarningContext } from './warning'\r\nimport { isPromise, isFunction } from '@vue/shared'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport const enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<number | string, string> = {\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo]\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode)\r\n}\r\n\r\nfunction logError(err: unknown, type: ErrorTypes, contextVNode: VNode | null) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev so it's more noticeable\r\n    throw err\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { isArray } from '@vue/shared'\r\n\r\nexport interface SchedulerJob {\r\n  (): void\r\n  /**\r\n   * unique job id, only present on raw effects, e.g. component render effect\r\n   */\r\n  id?: number\r\n  /**\r\n   * Indicates this is a watch() callback and is allowed to trigger itself.\r\n   * A watch callback doesn't track its dependencies so if it triggers itself\r\n   * again, it's likely intentional and it is the user's responsibility to\r\n   * perform recursive state mutation that eventually stabilizes.\r\n   */\r\n  cb?: boolean\r\n}\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: (SchedulerJob | null)[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPreFlushCbs: Function[] = []\r\nlet activePreFlushCbs: Function[] | null = null\r\nlet preFlushIndex = 0\r\n\r\nconst pendingPostFlushCbs: Function[] = []\r\nlet activePostFlushCbs: Function[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise: Promise<any> = Promise.resolve()\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nlet currentPreFlushParentJob: SchedulerJob | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob | Function, number>\r\n\r\nexport function nextTick(fn?: () => void): Promise<void> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(fn) : p\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    (!queue.length ||\r\n      !queue.includes(\r\n        job,\r\n        isFlushing && job.cb ? flushIndex + 1 : flushIndex\r\n      )) &&\r\n    job !== currentPreFlushParentJob\r\n  ) {\r\n    queue.push(job)\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > -1) {\r\n    queue[i] = null\r\n  }\r\n}\r\n\r\nfunction queueCb(\r\n  cb: Function | Function[],\r\n  activeQueue: Function[] | null,\r\n  pendingQueue: Function[],\r\n  index: number\r\n) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activeQueue ||\r\n      !activeQueue.includes(cb, (cb as SchedulerJob).cb ? index + 1 : index)\r\n    ) {\r\n      pendingQueue.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip dupicate check here to improve perf\r\n    pendingQueue.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function queuePreFlushCb(cb: Function) {\r\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex)\r\n}\r\n\r\nexport function queuePostFlushCb(cb: Function | Function[]) {\r\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex)\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  seen?: CountMap,\r\n  parentJob: SchedulerJob | null = null\r\n) {\r\n  if (pendingPreFlushCbs.length) {\r\n    currentPreFlushParentJob = parentJob\r\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)]\r\n    pendingPreFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      preFlushIndex = 0;\r\n      preFlushIndex < activePreFlushCbs.length;\r\n      preFlushIndex++\r\n    ) {\r\n      if (__DEV__) {\r\n        checkRecursiveUpdates(seen!, activePreFlushCbs[preFlushIndex])\r\n      }\r\n      activePreFlushCbs[preFlushIndex]()\r\n    }\r\n    activePreFlushCbs = null\r\n    preFlushIndex = 0\r\n    currentPreFlushParentJob = null\r\n    // recursively flush until it drains\r\n    flushPreFlushCbs(seen, parentJob)\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  if (pendingPostFlushCbs.length) {\r\n    activePostFlushCbs = [...new Set(pendingPostFlushCbs)]\r\n    pendingPostFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (__DEV__) {\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob) => (job.id == null ? Infinity : job.id)\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  flushPreFlushCbs(seen)\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  // Jobs can never be null before flush starts, since they are only invalidated\r\n  // during execution of another flushed job.\r\n  queue.sort((a, b) => getId(a!) - getId(b!))\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job) {\r\n        if (__DEV__) {\r\n          checkRecursiveUpdates(seen!, job)\r\n        }\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (queue.length || pendingPostFlushCbs.length) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob | Function) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      throw new Error(\r\n        `Maximum recursive updates exceeded. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`\r\n      )\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  FunctionalComponent,\r\n  Data\r\n} from './component'\r\nimport {\r\n  VNode,\r\n  normalizeVNode,\r\n  createVNode,\r\n  Comment,\r\n  cloneVNode,\r\n  Fragment,\r\n  VNodeArrayChildren,\r\n  isVNode\r\n} from './vnode'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\n\r\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\n\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  currentRenderingInstance = instance\r\n}\r\n\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    parent,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx\r\n  } = instance\r\n\r\n  let result\r\n  currentRenderingInstance = instance\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n  try {\r\n    let fallthroughAttrs\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          proxyToUse,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx\r\n        )\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit\r\n                  }\r\n                : { attrs, slots, emit }\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */)\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result\r\n    let setRoot: ((root: VNode) => void) | undefined = undefined\r\n    if (__DEV__) {\r\n      ;[root, setRoot] = getChildRoot(result)\r\n    }\r\n\r\n    if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n      const keys = Object.keys(fallthroughAttrs)\r\n      const { shapeFlag } = root\r\n      if (keys.length) {\r\n        if (\r\n          shapeFlag & ShapeFlags.ELEMENT ||\r\n          shapeFlag & ShapeFlags.COMPONENT\r\n        ) {\r\n          if (shapeFlag & ShapeFlags.ELEMENT && keys.some(isModelListener)) {\r\n            // #1643, #1543\r\n            // component v-model listeners should only fallthrough for component\r\n            // HOCs\r\n            fallthroughAttrs = filterModelListeners(fallthroughAttrs)\r\n          }\r\n          root = cloneVNode(root, fallthroughAttrs)\r\n        } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n          const allAttrs = Object.keys(attrs)\r\n          const eventAttrs: string[] = []\r\n          const extraAttrs: string[] = []\r\n          for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n            const key = allAttrs[i]\r\n            if (isOn(key)) {\r\n              // ignore v-model handlers when they fail to fallthrough\r\n              if (!isModelListener(key)) {\r\n                // remove `on`, lowercase first letter to reflect event casing\r\n                // accurately\r\n                eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n              }\r\n            } else {\r\n              extraAttrs.push(key)\r\n            }\r\n          }\r\n          if (extraAttrs.length) {\r\n            warn(\r\n              `Extraneous non-props attributes (` +\r\n                `${extraAttrs.join(', ')}) ` +\r\n                `were passed to component but could not be automatically inherited ` +\r\n                `because component renders fragment or text root nodes.`\r\n            )\r\n          }\r\n          if (eventAttrs.length) {\r\n            warn(\r\n              `Extraneous non-emits event listeners (` +\r\n                `${eventAttrs.join(', ')}) ` +\r\n                `were passed to component but could not be automatically inherited ` +\r\n                `because component renders fragment or text root nodes. ` +\r\n                `If the listener is intended to be a component custom event listener only, ` +\r\n                `declare it using the \"emits\" option.`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // inherit scopeId\r\n    const scopeId = vnode.scopeId\r\n    // vite#536: if subtree root is created from parent slot if would already\r\n    // have the correct scopeId, in this case adding the scopeId will cause\r\n    // it to be removed if the original slot vnode is reused.\r\n    const needScopeId = scopeId && root.scopeId !== scopeId\r\n    const treeOwnerId = parent && parent.type.__scopeId\r\n    const slotScopeId =\r\n      treeOwnerId && treeOwnerId !== scopeId ? treeOwnerId + '-s' : null\r\n    if (needScopeId || slotScopeId) {\r\n      const extras: Data = {}\r\n      if (needScopeId) extras[scopeId!] = ''\r\n      if (slotScopeId) extras[slotScopeId] = ''\r\n      root = cloneVNode(root, extras)\r\n    }\r\n\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n      if (__DEV__ && !isElementRoot(root)) {\r\n        warn(\r\n          `Runtime directive used on component with non-element root node. ` +\r\n            `The directives will not function as intended.`\r\n        )\r\n      }\r\n      root.dirs = vnode.dirs\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n      if (__DEV__ && !isElementRoot(root)) {\r\n        warn(\r\n          `Component inside <Transition> renders non-element root node ` +\r\n            `that cannot be animated.`\r\n        )\r\n      }\r\n      root.transition = vnode.transition\r\n    }\r\n\r\n    if (__DEV__ && setRoot) {\r\n      setRoot(root)\r\n    } else {\r\n      result = root\r\n    }\r\n  } catch (err) {\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n  currentRenderingInstance = null\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nconst getChildRoot = (\r\n  vnode: VNode\r\n): [VNode, ((root: VNode) => void) | undefined] => {\r\n  if (vnode.type !== Fragment) {\r\n    return [vnode, undefined]\r\n  }\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren as VNodeArrayChildren\r\n  const children = rawChildren.filter(child => {\r\n    return !(\r\n      isVNode(child) &&\r\n      child.type === Comment &&\r\n      child.children !== 'v-if'\r\n    )\r\n  })\r\n  if (children.length !== 1) {\r\n    return [vnode, undefined]\r\n  }\r\n  const childRoot = children[0]\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicIndex > -1) {\r\n      dynamicChildren[dynamicIndex] = updatedRoot\r\n    } else if (dynamicChildren && updatedRoot.patchFlag > 0) {\r\n      dynamicChildren.push(updatedRoot)\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & ShapeFlags.COMPONENT ||\r\n    vnode.shapeFlag & ShapeFlags.ELEMENT ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag > 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (nextProps![key] !== prevProps![key]) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(prevProps: Data, nextProps: Data): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (nextProps[key] !== prevProps[key]) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el // HostNode\r\n) {\r\n  while (parent && parent.subTree === vnode) {\r\n    ;(vnode = parent.vnode).el = el\r\n    parent = parent.parent\r\n  }\r\n}\r\n","import { VNode, normalizeVNode, VNodeChild, VNodeProps } from '../vnode'\r\nimport { isFunction, isArray, ShapeFlags } from '@vue/shared'\r\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport { Slots } from '../componentSlots'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  SetupRenderEffectFn,\r\n  RendererNode,\r\n  RendererElement\r\n} from '../renderer'\r\nimport { queuePostFlushCb, queueJob } from '../scheduler'\r\nimport { updateHOCHostEl } from '../componentRenderUtils'\r\nimport { pushWarningContext, popWarningContext } from '../warning'\r\nimport { handleError, ErrorCodes } from '../errorHandling'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onRecede?: () => void\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    } else {\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = ((__FEATURE_SUSPENSE__\r\n  ? SuspenseImpl\r\n  : null) as any) as {\r\n  __isSuspense: true\r\n  new (): { $props: VNodeProps & SuspenseProps }\r\n}\r\n\r\nfunction mountSuspense(\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement }\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (n2.suspense = createSuspenseBoundary(\r\n    n2,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    isSVG,\r\n    optimized,\r\n    rendererInternals\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    suspense.subTree,\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    isSVG,\r\n    optimized\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      suspense.fallbackTree,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      isSVG,\r\n      optimized\r\n    )\r\n    n2.el = suspense.fallbackTree.el\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve()\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  isSVG: boolean,\r\n  optimized: boolean,\r\n  { p: patch }: RendererInternals\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  const { content, fallback } = normalizeSuspenseChildren(n2)\r\n  const oldSubTree = suspense.subTree\r\n  const oldFallbackTree = suspense.fallbackTree\r\n  if (!suspense.isResolved) {\r\n    patch(\r\n      oldSubTree,\r\n      content,\r\n      suspense.hiddenContainer,\r\n      null,\r\n      parentComponent,\r\n      suspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n    if (suspense.deps > 0) {\r\n      // still pending. patch the fallback tree.\r\n      patch(\r\n        oldFallbackTree,\r\n        fallback,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        null, // fallback tree will not have suspense context\r\n        isSVG,\r\n        optimized\r\n      )\r\n      n2.el = fallback.el\r\n    }\r\n    // If deps somehow becomes 0 after the patch it means the patch caused an\r\n    // async dep component to unmount and removed its dep. It will cause the\r\n    // suspense to resolve and we don't need to do anything here.\r\n  } else {\r\n    // just normal patch inner content as a fragment\r\n    patch(\r\n      oldSubTree,\r\n      content,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      suspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n    n2.el = content.el\r\n  }\r\n  suspense.subTree = content\r\n  suspense.fallbackTree = fallback\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  isSVG: boolean\r\n  optimized: boolean\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  anchor: RendererNode | null\r\n  subTree: VNode\r\n  fallbackTree: VNode\r\n  deps: number\r\n  isHydrating: boolean\r\n  isResolved: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(): void\r\n  recede(): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parent: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  isSVG: boolean,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-ignore `console.info` cannot be null error\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode }\r\n  } = rendererInternals\r\n\r\n  const getCurrentTree = () =>\r\n    suspense.isResolved || suspense.isHydrating\r\n      ? suspense.subTree\r\n      : suspense.fallbackTree\r\n\r\n  const { content, fallback } = normalizeSuspenseChildren(vnode)\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent,\r\n    parentComponent,\r\n    isSVG,\r\n    optimized,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    deps: 0,\r\n    subTree: content,\r\n    fallbackTree: fallback,\r\n    isHydrating,\r\n    isResolved: false,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve() {\r\n      if (__DEV__) {\r\n        if (suspense.isResolved) {\r\n          throw new Error(\r\n            `resolveSuspense() is called on an already resolved suspense boundary.`\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `resolveSuspense() is called on an already unmounted suspense boundary.`\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        subTree,\r\n        fallbackTree,\r\n        effects,\r\n        parentComponent,\r\n        container\r\n      } = suspense\r\n\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else {\r\n        // this is initial anchor on mount\r\n        let { anchor } = suspense\r\n        // unmount fallback tree\r\n        if (fallbackTree.el) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          anchor = next(fallbackTree)\r\n          unmount(fallbackTree, parentComponent, suspense, true)\r\n        }\r\n        // move content from off-dom container to actual container\r\n        move(subTree, container, anchor, MoveType.ENTER)\r\n      }\r\n\r\n      const el = (vnode.el = subTree.el!)\r\n      // suspense as the root node of a component...\r\n      if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el\r\n        updateHOCHostEl(parentComponent, el)\r\n      }\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (!parent.isResolved) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense, flush all jobs\r\n      if (!hasUnresolvedAncestor) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.isResolved = true\r\n      suspense.effects = []\r\n      // invoke @resolve event\r\n      const onResolve = vnode.props && vnode.props.onResolve\r\n      if (isFunction(onResolve)) {\r\n        onResolve()\r\n      }\r\n    },\r\n\r\n    recede() {\r\n      suspense.isResolved = false\r\n      const {\r\n        vnode,\r\n        subTree,\r\n        fallbackTree,\r\n        parentComponent,\r\n        container,\r\n        hiddenContainer,\r\n        isSVG,\r\n        optimized\r\n      } = suspense\r\n\r\n      // move content tree back to the off-dom container\r\n      const anchor = next(subTree)\r\n      move(subTree, hiddenContainer, null, MoveType.LEAVE)\r\n      // remount the fallback tree\r\n      patch(\r\n        null,\r\n        fallbackTree,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        null, // fallback tree will not have suspense context\r\n        isSVG,\r\n        optimized\r\n      )\r\n      const el = (vnode.el = fallbackTree.el!)\r\n      // suspense as the root node of a component...\r\n      if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el\r\n        updateHOCHostEl(parentComponent, el)\r\n      }\r\n\r\n      // invoke @recede event\r\n      const onRecede = vnode.props && vnode.props.onRecede\r\n      if (isFunction(onRecede)) {\r\n        onRecede()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      move(getCurrentTree(), container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return next(getCurrentTree())\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      // suspense is already resolved, need to recede.\r\n      // use queueJob so it's handled synchronously after patching the current\r\n      // suspense tree\r\n      if (suspense.isResolved) {\r\n        queueJob(() => {\r\n          suspense.recede()\r\n        })\r\n      }\r\n\r\n      const hydratedEl = instance.vnode.el\r\n      suspense.deps++\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (instance.isUnmounted || suspense.isUnmounted) {\r\n            return\r\n          }\r\n          suspense.deps--\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            hydratedEl\r\n              ? parentNode(hydratedEl)!\r\n              : parentNode(instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          if (suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      unmount(suspense.subTree, parentComponent, parentSuspense, doRemove)\r\n      if (!suspense.isResolved) {\r\n        unmount(\r\n          suspense.fallbackTree,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  /* eslint-disable no-restricted-globals */\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    document.createElement('div'),\r\n    null,\r\n    isSVG,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    suspense.subTree,\r\n    parentComponent,\r\n    suspense,\r\n    optimized\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve()\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nexport function normalizeSuspenseChildren(\r\n  vnode: VNode\r\n): {\r\n  content: VNode\r\n  fallback: VNode\r\n} {\r\n  const { shapeFlag, children } = vnode\r\n  if (shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const { default: d, fallback } = children as Slots\r\n    return {\r\n      content: normalizeVNode(isFunction(d) ? d() : d),\r\n      fallback: normalizeVNode(isFunction(fallback) ? fallback() : fallback)\r\n    }\r\n  } else {\r\n    return {\r\n      content: normalizeVNode(children as VNodeChild),\r\n      fallback: normalizeVNode(null)\r\n    }\r\n  }\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null\r\n): void {\r\n  if (suspense && !suspense.isResolved) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n","import { Slot } from '../componentSlots'\r\nimport {\r\n  setCurrentRenderingInstance,\r\n  currentRenderingInstance\r\n} from '../componentRenderUtils'\r\nimport { ComponentInternalInstance } from '../component'\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nexport function withCtx(\r\n  fn: Slot,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance\r\n) {\r\n  if (!ctx) return fn\r\n  return function renderFnWithContext() {\r\n    const owner = currentRenderingInstance\r\n    setCurrentRenderingInstance(ctx)\r\n    const res = fn.apply(null, arguments as any)\r\n    setCurrentRenderingInstance(owner)\r\n    return res\r\n  }\r\n}\r\n","// SFC scoped style ID management.\r\n// These are only used in esm-bundler builds, but since exports cannot be\r\n// conditional, we can only drop inner implementations in non-bundler builds.\r\n\r\nimport { withCtx } from './withRenderContext'\r\n\r\nexport let currentScopeId: string | null = null\r\nconst scopeIdStack: string[] = []\r\n\r\n/**\r\n * @private\r\n */\r\nexport function pushScopeId(id: string) {\r\n  scopeIdStack.push((currentScopeId = id))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  scopeIdStack.pop()\r\n  currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function withScopeId(id: string): <T extends Function>(fn: T) => T {\r\n  return ((fn: Function) =>\r\n    withCtx(function(this: any) {\r\n      pushScopeId(id)\r\n      const res = fn.apply(this, arguments)\r\n      popScopeId()\r\n      return res\r\n    })) as any\r\n}\r\n","import { ComponentInternalInstance } from '../component'\r\nimport { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  RendererOptions\r\n} from '../renderer'\r\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { isString, ShapeFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector']\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`\r\n          )\r\n      }\r\n      return target as any\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as any\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean,\r\n    internals: RendererInternals\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment }\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    const { shapeFlag, children } = n2\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n      } else if (__DEV__) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n\r\n      if (n2.dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          n2.dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (n2.patchFlag > 0 && n2.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          const oldChildren = n1.children as VNode[]\r\n          const children = n2.children as VNode[]\r\n          for (let i = 0; i < children.length; i++) {\r\n            children[i].el = oldChildren[i].el\r\n          }\r\n        }\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    { r: remove, o: { remove: hostRemove } }: RendererInternals\r\n  ) {\r\n    const { shapeFlag, children, anchor } = vnode\r\n    hostRemove(anchor!)\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        remove((children as VNode[])[i])\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport\r\n}\r\n\r\nexport const enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector }\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n        vnode.targetAnchor = hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized\r\n        )\r\n      }\r\n      ;(target as TeleportTargetElement)._lpa =\r\n        vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n    }\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = (TeleportImpl as any) as {\r\n  __isTeleport: true\r\n  new (): { $props: VNodeProps & TeleportProps }\r\n}\r\n","import { currentRenderingInstance } from '../componentRenderUtils'\r\nimport {\r\n  currentInstance,\r\n  Component,\r\n  FunctionalComponent,\r\n  ComponentOptions\r\n} from '../component'\r\nimport { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { VNodeTypes } from '../vnode'\r\n\r\nconst COMPONENTS = 'components'\r\nconst DIRECTIVES = 'directives'\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(name: string): Component | string | undefined {\r\n  return resolveAsset(COMPONENTS, name) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean\r\n): Component | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string\r\n): Directive | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS | typeof DIRECTIVES,\r\n  name: string,\r\n  warnMissing = true\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName =\r\n        (Component as FunctionalComponent).displayName || Component.name\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      resolve((Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n    if (__DEV__ && warnMissing && !res) {\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`)\r\n    }\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  isObject,\r\n  EMPTY_ARR,\r\n  extend,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  isOn\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  Component,\r\n  ClassComponent\r\n} from './component'\r\nimport { RawSlots } from './componentSlots'\r\nimport { isProxy, Ref, toRaw } from '@vue/reactivity'\r\nimport { AppContext } from './apiCreateApp'\r\nimport {\r\n  SuspenseImpl,\r\n  isSuspense,\r\n  SuspenseBoundary\r\n} from './components/Suspense'\r\nimport { DirectiveBinding } from './directives'\r\nimport { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport { currentScopeId } from './helpers/scopeId'\r\nimport { TeleportImpl, isTeleport } from './components/Teleport'\r\nimport { currentRenderingInstance } from './componentRenderUtils'\r\nimport { RendererNode, RendererElement } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\n\r\nexport const Fragment = (Symbol(__DEV__ ? 'Fragment' : undefined) as any) as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol(__DEV__ ? 'Text' : undefined)\r\nexport const Comment = Symbol(__DEV__ ? 'Comment' : undefined)\r\nexport const Static = Symbol(__DEV__ ? 'Static' : undefined)\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof TeleportImpl\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((ref: object | null, refs: Record<string, any>) => void)\r\n\r\nexport type VNodeNormalizedRef = [ComponentInternalInstance, VNodeRef]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number\r\n  ref?: VNodeRef\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any }\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_skip: true\r\n  type: VNodeTypes\r\n  props: (VNodeProps & ExtraProps) | null\r\n  key: string | number | null\r\n  ref: VNodeNormalizedRef | null\r\n  scopeId: string | null // SFC only\r\n  children: VNodeNormalizedChildren\r\n  component: ComponentInternalInstance | null\r\n  suspense: SuspenseBoundary | null\r\n  dirs: DirectiveBinding[] | null\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // DOM\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  staticCount: number // number of elements contained in a static vnode\r\n\r\n  // optimization only\r\n  shapeFlag: number\r\n  patchFlag: number\r\n  dynamicProps: string[] | null\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack: (VNode[] | null)[] = []\r\nlet currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  shouldTrack += value\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[]\r\n): VNode {\r\n  const vnode = createVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    true /* isBlock: prevent a block from tracking itself */\r\n  )\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren = currentBlock || EMPTY_ARR\r\n  // close block\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as Component)\r\n  ) {\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args)\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({ ref }: VNodeProps): VNode['ref'] => {\r\n  return (ref != null\r\n    ? isArray(ref)\r\n      ? ref\r\n      : [currentRenderingInstance!, ref]\r\n    : null) as any\r\n}\r\n\r\nexport const createVNode = (__DEV__\r\n  ? createVNodeWithArgsTransform\r\n  : _createVNode) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false\r\n): VNode {\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    const cloned = cloneVNode(type, props)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isFunction(type) && '__vccOpts' in type) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    if (isProxy(props) || InternalObjectKey in props) {\r\n      props = extend({}, props)\r\n    }\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n      ? ShapeFlags.SUSPENSE\r\n      : isTeleport(type)\r\n        ? ShapeFlags.TELEPORT\r\n        : isObject(type)\r\n          ? ShapeFlags.STATEFUL_COMPONENT\r\n          : isFunction(type)\r\n            ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n            : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component which was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead, and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type\r\n    )\r\n  }\r\n\r\n  const vnode: VNode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type,\r\n    props,\r\n    key: props && normalizeKey(props),\r\n    ref: props && normalizeRef(props),\r\n    scopeId: currentScopeId,\r\n    children: null,\r\n    component: null,\r\n    suspense: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  normalizeChildren(vnode, children)\r\n\r\n  // presence of a patch flag indicates this node needs patching on updates.\r\n  // component nodes also should always be patched, because even if the\r\n  // component doesn't need to update, it needs to persist the instance on to\r\n  // the next vnode so that it can be properly unmounted later.\r\n  if (\r\n    shouldTrack > 0 &&\r\n    !isBlockNode &&\r\n    currentBlock &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    patchFlag !== PatchFlags.HYDRATE_EVENTS &&\r\n    (patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT)\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: Data & VNodeProps | null\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, patchFlag } = vnode\r\n  const mergedProps = extraProps\r\n    ? props\r\n      ? mergeProps(props, extraProps)\r\n      : extend({}, extraProps)\r\n    : props\r\n  return {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref: extraProps && extraProps.ref ? normalizeRef(extraProps) : vnode.ref,\r\n    scopeId: vnode.scopeId,\r\n    children: vnode.children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: perserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === -1 // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    el: vnode.el,\r\n    anchor: vnode.anchor\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(Fragment, null, child)\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return child.el === null ? child : cloneVNode(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return child.el === null ? child : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    // Normalize slot to plain children\r\n    if (\r\n      (shapeFlag & ShapeFlags.ELEMENT || shapeFlag & ShapeFlags.TELEPORT) &&\r\n      (children as any).default\r\n    ) {\r\n      normalizeChildren(vnode, (children as any).default())\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          currentRenderingInstance.vnode.patchFlag & PatchFlags.DYNAMIC_SLOTS\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret = extend({}, args[0])\r\n  for (let i = 1; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (existing !== incoming) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, toMerge[key] as any)\r\n            : incoming\r\n        }\r\n      } else {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  isArray,\r\n  isOn,\r\n  hasOwn,\r\n  EMPTY_OBJ,\r\n  capitalize,\r\n  hyphenate,\r\n  isFunction,\r\n  extend\r\n} from '@vue/shared'\r\nimport { ComponentInternalInstance, Component } from './component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { normalizePropsOptions } from './componentProps'\r\nimport { UnionToIntersection } from './helpers/typeUtils'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options\r\n> = Options extends any[]\r\n  ? (event: Options[0], ...args: any[]) => void\r\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n    ? (event: string, ...args: any[]) => void\r\n    : UnionToIntersection<\r\n        {\r\n          [key in Event]: Options[key] extends ((...args: infer Args) => any)\r\n            ? (event: key, ...args: Args) => void\r\n            : (event: key, ...args: any[]) => void\r\n        }[Event]\r\n      >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...args: any[]\r\n) {\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const options = normalizeEmitsOptions(instance.type)\r\n    if (options) {\r\n      if (!(event in options)) {\r\n        const propsOptions = normalizePropsOptions(instance.type)[0]\r\n        if (!propsOptions || !(`on` + capitalize(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"on${capitalize(event)}\" prop.`\r\n          )\r\n        }\r\n      } else {\r\n        const validator = options[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...args)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let handlerName = `on${capitalize(event)}`\r\n  let handler = props[handlerName]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && event.startsWith('update:')) {\r\n    handlerName = `on${capitalize(hyphenate(event))}`\r\n    handler = props[handlerName]\r\n  }\r\n  if (!handler) {\r\n    handler = props[handlerName + `Once`]\r\n    if (!instance.emitted) {\r\n      ;(instance.emitted = {} as Record<string, boolean>)[handlerName] = true\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n  }\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n}\r\n\r\nfunction normalizeEmitsOptions(\r\n  comp: Component\r\n): ObjectEmitsOptions | undefined {\r\n  if (hasOwn(comp, '__emits')) {\r\n    return comp.__emits\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    if (comp.extends) {\r\n      hasExtends = true\r\n      extend(normalized, normalizeEmitsOptions(comp.extends))\r\n    }\r\n    if (comp.mixins) {\r\n      hasExtends = true\r\n      comp.mixins.forEach(m => extend(normalized, normalizeEmitsOptions(m)))\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    return (comp.__emits = undefined)\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n  return (comp.__emits = normalized)\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(comp: Component, key: string): boolean {\r\n  let emits: ObjectEmitsOptions | undefined\r\n  if (!isOn(key) || !(emits = normalizeEmitsOptions(comp))) {\r\n    return false\r\n  }\r\n  key = key.replace(/Once$/, '')\r\n  return (\r\n    hasOwn(emits, key[2].toLowerCase() + key.slice(3)) ||\r\n    hasOwn(emits, key.slice(2))\r\n  )\r\n}\r\n","import {\r\n  toRaw,\r\n  shallowReactive,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_OBJ,\r\n  camelize,\r\n  hyphenate,\r\n  capitalize,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  isObject,\r\n  hasOwn,\r\n  toRawType,\r\n  PatchFlags,\r\n  makeMap,\r\n  isReservedProp,\r\n  EMPTY_ARR,\r\n  def,\r\n  extend\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  Component\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T> = PropOptions<T> | PropType<T>\r\n\r\ntype DefaultFactory<T> = () => T | null | undefined\r\n\r\ninterface PropOptions<T = any> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: T | DefaultFactory<T> | null | undefined\r\n  validator?(value: unknown): boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & object }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = T extends (...args: any) => any // if is function with args\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T, MakeDefaultRequired> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | (MakeDefaultRequired extends true ? { default: any } : never)\r\n    ? K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T, MakeDefaultRequired> = Exclude<\r\n  keyof T,\r\n  RequiredKeys<T, MakeDefaultRequired>\r\n>\r\n\r\ntype InferPropType<T> = T extends null\r\n  ? any // null & true would fail to infer\r\n  : T extends { type: null | true }\r\n    ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n    : T extends ObjectConstructor | { type: ObjectConstructor }\r\n      ? Record<string, any>\r\n      : T extends BooleanConstructor | { type: BooleanConstructor }\r\n        ? boolean\r\n        : T extends Prop<infer V> ? V : T\r\n\r\nexport type ExtractPropTypes<\r\n  O,\r\n  MakeDefaultRequired extends boolean = true\r\n> = O extends object\r\n  ? { [K in RequiredKeys<O, MakeDefaultRequired>]: InferPropType<O[K]> } &\r\n      { [K in OptionalKeys<O, MakeDefaultRequired>]?: InferPropType<O[K]> }\r\n  : { [K in string]: any }\r\n\r\nconst enum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue\r\n}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedPropsOptions = [Record<string, NormalizedProp>, string[]]\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n  setFullProps(instance, rawProps, props, attrs)\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(props, instance.type)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag }\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = normalizePropsOptions(instance.type)\r\n\r\n  if ((optimized || patchFlag > 0) && !(patchFlag & PatchFlags.FULL_PROPS)) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        const key = propsToUpdate[i]\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            attrs[key] = value\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value\r\n            )\r\n          }\r\n        } else {\r\n          attrs[key] = value\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    setFullProps(instance, rawProps, props, attrs)\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawProps || EMPTY_OBJ,\r\n              key,\r\n              undefined\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (!rawProps || !hasOwn(rawProps, key)) {\r\n          delete attrs[key]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n\r\n  if (__DEV__ && rawProps) {\r\n    validateProps(props, instance.type)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data\r\n) {\r\n  const [options, needCastKeys] = normalizePropsOptions(instance.type)\r\n  if (rawProps) {\r\n    for (const key in rawProps) {\r\n      const value = rawProps[key]\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        props[camelKey] = value\r\n      } else if (!isEmitListener(instance.type, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        attrs[key] = value\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        rawCurrentProps[key]\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedPropsOptions[0],\r\n  props: Data,\r\n  key: string,\r\n  value: unknown\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      value =\r\n        opt.type !== Function && isFunction(defaultValue)\r\n          ? defaultValue()\r\n          : defaultValue\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (!hasOwn(props, key) && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: Component\r\n): NormalizedPropsOptions | [] {\r\n  if (comp.__props) {\r\n    return comp.__props\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      const [props, keys] = normalizePropsOptions(raw)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (comp.extends) {\r\n      hasExtends = true\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      hasExtends = true\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    return (comp.__props = EMPTY_ARR)\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const normalizedEntry: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  comp.__props = normalizedEntry\r\n  return normalizedEntry\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\r\n  return match ? match[1] : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n      if (isSameType(expectedTypes[i], type)) {\r\n        return i\r\n      }\r\n    }\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props: Data, comp: Component) {\r\n  const rawValues = toRaw(props)\r\n  const options = normalizePropsOptions(comp)[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key))\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  isAbsent: boolean\r\n) {\r\n  const { type, required, validator } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol'\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = toRawType(value) === 'Object'\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[]\r\n): string {\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(', ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance,\r\n  setCurrentInstance,\r\n  isInSSRComponentSetup\r\n} from './component'\r\nimport { ComponentPublicInstance } from './componentProxy'\r\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { capitalize } from '@vue/shared'\r\nimport { pauseTracking, resetTracking, DebuggerEvent } from '@vue/reactivity'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false\r\n) {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        setCurrentInstance(null)\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n  } else if (__DEV__) {\r\n    const apiName = `on${capitalize(\r\n      ErrorTypeStrings[type].replace(/ hook$/, '')\r\n    )}`\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``)\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook = <T extends Function = () => any>(\r\n  lifecycle: LifecycleHooks\r\n) => (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n  // post-create lifecycle registrations are noops during SSR\r\n  !isInSSRComponentSetup && injectHook(lifecycle, hook, target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED\r\n)\r\n\r\nexport type ErrorCapturedHook = (\r\n  err: unknown,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string\r\n) => boolean | void\r\n\r\nexport const onErrorCaptured = (\r\n  hook: ErrorCapturedHook,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) => {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance\r\n} from '../component'\r\nimport {\r\n  cloneVNode,\r\n  Comment,\r\n  isSameVNodeType,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  Fragment\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { ShapeFlags, PatchFlags } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport { RendererElement } from '../renderer'\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: (el: HostElement) => void\r\n  onEnter?: (el: HostElement, done: () => void) => void\r\n  onAfterEnter?: (el: HostElement) => void\r\n  onEnterCancelled?: (el: HostElement) => void\r\n  // leave\r\n  onBeforeLeave?: (el: HostElement) => void\r\n  onLeave?: (el: HostElement, done: () => void) => void\r\n  onAfterLeave?: (el: HostElement) => void\r\n  onLeaveCancelled?: (el: HostElement) => void // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: (el: HostElement) => void\r\n  onAppear?: (el: HostElement, done: () => void) => void\r\n  onAfterAppear?: (el: HostElement) => void\r\n  onAppearCancelled?: (el: HostElement) => void\r\n}\r\n\r\nexport interface TransitionHooks<\r\n  HostElement extends RendererElement = RendererElement\r\n> {\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\ntype TransitionHookCaller = (\r\n  hook: ((el: any) => void) | undefined,\r\n  args?: any[]\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  _enterCb?: PendingCallback\r\n  _leaveCb?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map()\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst BaseTransitionImpl = {\r\n  name: `BaseTransition`,\r\n\r\n  props: {\r\n    mode: String,\r\n    appear: Boolean,\r\n    persisted: Boolean,\r\n    // enter\r\n    onBeforeEnter: Function,\r\n    onEnter: Function,\r\n    onAfterEnter: Function,\r\n    onEnterCancelled: Function,\r\n    // leave\r\n    onBeforeLeave: Function,\r\n    onLeave: Function,\r\n    onAfterLeave: Function,\r\n    onLeaveCancelled: Function,\r\n    // appear\r\n    onBeforeAppear: Function,\r\n    onAppear: Function,\r\n    onAfterAppear: Function,\r\n    onAppearCancelled: Function\r\n  },\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      // warn multiple elements\r\n      if (__DEV__ && children.length > 1) {\r\n        warn(\r\n          '<transition> can only be used on a single element or component. Use ' +\r\n            '<transition-group> for lists.'\r\n        )\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (__DEV__ && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      // at this point children has a guaranteed length of 1.\r\n      const child = children[0]\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = (innerChild.transition = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance\r\n      ))\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            instance.update()\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out') {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el._leaveCb = () => {\r\n              earlyRemove()\r\n              el._leaveCb = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  }\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = (BaseTransitionImpl as any) as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  {\r\n    appear,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled\r\n  }: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance\r\n): TransitionHooks {\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args\r\n      )\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el._leaveCb) {\r\n        el._leaveCb(true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        leavingVNode.el!._leaveCb\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        leavingVNode.el!._leaveCb()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el._enterCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el._enterCb = undefined\r\n      })\r\n      if (hook) {\r\n        hook(el, done)\r\n        if (hook.length <= 1) {\r\n          done()\r\n        }\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el._enterCb) {\r\n        el._enterCb(true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el._leaveCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el._leaveCb = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        onLeave(el, done)\r\n        if (onLeave.length <= 1) {\r\n          done()\r\n        }\r\n      } else {\r\n        done()\r\n      }\r\n    }\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? vnode.children\r\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n      : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment)\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-top\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  Component,\r\n  getCurrentInstance,\r\n  FunctionalComponent,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance\r\n} from '../component'\r\nimport { VNode, cloneVNode, isVNode, VNodeProps } from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  onBeforeUnmount,\r\n  injectHook,\r\n  onUnmounted,\r\n  onBeforeMount,\r\n  onBeforeUpdate\r\n} from '../apiLifecycle'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  ShapeFlags,\r\n  remove,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  RendererInternals,\r\n  queuePostRenderEffect,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  invokeVNodeHook\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport { ComponentRenderContext } from '../componentProxy'\r\n\r\ntype MatchPattern = string | RegExp | string[] | RegExp[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | Component\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  inheritRef: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number]\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    const instance = getCurrentInstance()!\r\n    const parentSuspense = instance.suspense\r\n\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getName(vnode.type as Component)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || cached.type !== current.type) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => matches(exclude, name))\r\n      }\r\n    )\r\n\r\n    // cache sub tree in beforeMount/Update (i.e. right after the render)\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, instance.subTree)\r\n      }\r\n    }\r\n    onBeforeMount(cacheSubtree)\r\n    onBeforeUpdate(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        if (cached.type === subTree.type) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(subTree)\r\n          // but invoke its deactivated hook here\r\n          const da = subTree.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      let vnode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(vnode) ||\r\n        !(vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT)\r\n      ) {\r\n        current = null\r\n        return vnode\r\n      }\r\n\r\n      const comp = vnode.type as Component\r\n      const name = getName(comp)\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        return (current = vnode)\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return vnode\r\n    }\r\n  }\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = (KeepAliveImpl as any) as {\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n  }\r\n}\r\n\r\nfunction getName(comp: Component): string | void {\r\n  return (comp as FunctionalComponent).displayName || comp.name\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').indexOf(name) > -1\r\n  } else if (pattern.test) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function,\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance\r\n) {\r\n  injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, hook)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n","import { ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  VNode,\r\n  VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n  VNodeChild,\r\n  InternalObjectKey\r\n} from './vnode'\r\nimport {\r\n  isArray,\r\n  isFunction,\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  extend,\r\n  def,\r\n  SlotFlags\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { withCtx } from './helpers/withRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\n\r\nexport type Slot = (...args: any[]) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined\r\n): Slot =>\r\n  withCtx((props: any) => {\r\n    if (__DEV__ && currentInstance) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(props))\r\n  }, ctx)\r\n\r\nconst normalizeObjectSlots = (rawSlots: RawSlots, slots: InternalSlots) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (__DEV__) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (__DEV__ && !isKeepAlive(instance.vnode)) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      instance.slots = children as InternalSlots\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(children as RawSlots, (instance.slots = {}))\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n      } else if (type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport { VNode } from './vnode'\r\nimport { isFunction, EMPTY_OBJ, makeMap } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { ComponentInternalInstance, Data } from './component'\r\nimport { currentRenderingInstance } from './componentRenderUtils'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentProxy'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nexport type VNodeDirectiveData = [\r\n  unknown,\r\n  string | undefined,\r\n  DirectiveModifiers\r\n]\r\n\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text'\r\n)\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive]\r\n  | [Directive, any]\r\n  | [Directive, any, string]\r\n  | [Directive, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments\r\n): T {\r\n  const internalInstance = currentRenderingInstance\r\n  if (internalInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance = internalInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (isFunction(dir)) {\r\n      dir = {\r\n        mounted: dir,\r\n        updated: dir\r\n      } as ObjectDirective\r\n    }\r\n    bindings.push({\r\n      dir,\r\n      instance,\r\n      value,\r\n      oldValue: void 0,\r\n      arg,\r\n      modifiers\r\n    })\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    const hook = binding.dir[name] as DirectiveHook | undefined\r\n    if (hook) {\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode\r\n      ])\r\n    }\r\n  }\r\n}\r\n","import { App } from './apiCreateApp'\r\nimport { Fragment, Text, Comment, Static } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\nexport interface AppRecord {\r\n  id: number\r\n  app: App\r\n  version: string\r\n  types: Record<string, string | Symbol>\r\n}\r\n\r\nconst enum DevtoolsHooks {\r\n  APP_INIT = 'app:init',\r\n  APP_UNMOUNT = 'app:unmount',\r\n  COMPONENT_UPDATED = 'component:updated',\r\n  COMPONENT_ADDED = 'component:added',\r\n  COMPONENT_REMOVED = 'component:removed'\r\n}\r\n\r\nexport interface DevtoolsHook {\r\n  emit: (event: string, ...payload: any[]) => void\r\n  on: (event: string, handler: Function) => void\r\n  once: (event: string, handler: Function) => void\r\n  off: (event: string, handler: Function) => void\r\n  appRecords: AppRecord[]\r\n}\r\n\r\nexport let devtools: DevtoolsHook\r\n\r\nexport function setDevtoolsHook(hook: DevtoolsHook) {\r\n  devtools = hook\r\n}\r\n\r\nexport function devtoolsInitApp(app: App, version: string) {\r\n  // TODO queue if devtools is undefined\r\n  if (!devtools) return\r\n  devtools.emit(DevtoolsHooks.APP_INIT, app, version, {\r\n    Fragment,\r\n    Text,\r\n    Comment,\r\n    Static\r\n  })\r\n}\r\n\r\nexport function devtoolsUnmountApp(app: App) {\r\n  if (!devtools) return\r\n  devtools.emit(DevtoolsHooks.APP_UNMOUNT, app)\r\n}\r\n\r\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsHook(\r\n  DevtoolsHooks.COMPONENT_ADDED\r\n)\r\n\r\nexport const devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsHook(\r\n  DevtoolsHooks.COMPONENT_UPDATED\r\n)\r\n\r\nexport const devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsHook(\r\n  DevtoolsHooks.COMPONENT_REMOVED\r\n)\r\n\r\nfunction createDevtoolsHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance) => {\r\n    if (!devtools) return\r\n    devtools.emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component.parent ? component.parent.uid : undefined\r\n    )\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Data,\r\n  validateComponentName,\r\n  PublicAPIComponent\r\n} from './component'\r\nimport { ComponentOptions } from './componentOptions'\r\nimport { ComponentPublicInstance } from './componentProxy'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport { RootRenderFunction } from './renderer'\r\nimport { InjectionKey } from './apiInject'\r\nimport { isFunction, NO, isObject } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { createVNode, cloneVNode, VNode } from './vnode'\r\nimport { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { version } from '.'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n  use(plugin: Plugin, ...options: any[]): this\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): PublicAPIComponent | undefined\r\n  component(name: string, component: PublicAPIComponent): this\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean\r\n  ): ComponentPublicInstance\r\n  unmount(rootContainer: HostElement | string): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _component: Component\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n}\r\n\r\nexport type OptionMergeFunction = (\r\n  to: unknown,\r\n  from: unknown,\r\n  instance: any,\r\n  key: string\r\n) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: Record<string, any>\r\n  isCustomElement: (tag: string) => boolean\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string\r\n  ) => void\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, PublicAPIComponent>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n  reload?: () => void // HMR only\r\n}\r\n\r\ntype PluginInstallFunction = (app: App, ...options: any[]) => any\r\n\r\nexport type Plugin =\r\n  | PluginInstallFunction & { install?: PluginInstallFunction }\r\n  | {\r\n      install: PluginInstallFunction\r\n    }\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      isCustomElement: NO,\r\n      errorHandler: undefined,\r\n      warnHandler: undefined\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null)\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: PublicAPIComponent,\r\n  rootProps?: Data | null\r\n) => App<HostElement>\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction,\r\n  hydrate?: RootHydrateFunction\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n\r\n    const context = createAppContext()\r\n    const installedPlugins = new Set()\r\n\r\n    let isMounted = false\r\n\r\n    const app: App = (context.app = {\r\n      _component: rootComponent as Component,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : '')\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: PublicAPIComponent): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(rootContainer: HostElement, isHydrate?: boolean): any {\r\n        if (!isMounted) {\r\n          const vnode = createVNode(rootComponent as Component, rootProps)\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          vnode.appContext = context\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              render(cloneVNode(vnode), rootContainer)\r\n            }\r\n          }\r\n\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          devtoolsUnmountApp(app)\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && key in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`\r\n          )\r\n        }\r\n        // TypeScript doesn't allow symbols as index type\r\n        // https://github.com/Microsoft/TypeScript/issues/24587\r\n        context.provides[key as string] = value\r\n\r\n        return app\r\n      }\r\n    })\r\n\r\n    return app\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  Text,\r\n  Comment,\r\n  Static,\r\n  Fragment,\r\n  VNodeHook\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport { ComponentOptions, ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\r\nimport { RendererInternals, invokeVNodeHook, setRef } from './renderer'\r\nimport {\r\n  SuspenseImpl,\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: Element\r\n) => void\r\n\r\nconst enum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: { patchProp, nextSibling, parentNode, remove, insert, createComment }\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (__DEV__ && !container.hasChildNodes()) {\r\n      warn(\r\n        `Attempting to hydrate existing markup but container is empty. ` +\r\n          `Performing full mount instead.`\r\n      )\r\n      patch(null, vnode, container)\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null)\r\n    flushPostFlushCbs()\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized = false\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isFragmentStart\r\n      )\r\n\r\n    const { type, ref, shapeFlag } = vnode\r\n    const domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            __DEV__ &&\r\n              warn(\r\n                `Hydration text mismatch:` +\r\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\r\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (domType !== DOMNodeTypes.ELEMENT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children += (nextNode as Element).outerHTML\r\n            if (i === vnode.staticCount - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return nextNode\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            optimized\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            domType !== DOMNodeTypes.ELEMENT ||\r\n            vnode.type !== (node as Element).tagName.toLowerCase()\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              optimized\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          const container = parentNode(node)!\r\n          const hydrateComponent = () => {\r\n            mountComponent(\r\n              vnode,\r\n              container,\r\n              null,\r\n              parentComponent,\r\n              parentSuspense,\r\n              isSVGContainer(container),\r\n              optimized\r\n            )\r\n          }\r\n          // async component\r\n          const loadAsync = (vnode.type as ComponentOptions).__asyncLoader\r\n          if (loadAsync) {\r\n            loadAsync().then(hydrateComponent)\r\n          } else {\r\n            hydrateComponent()\r\n          }\r\n          // component may be async, so in the case of fragments we cannot rely\r\n          // on component's rendered output to determine the end of the fragment\r\n          // instead, we do a lookahead to find the end anchor node.\r\n          nextNode = isFragmentStart\r\n            ? locateClosingAsyncAnchor(node)\r\n            : nextSibling(node)\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(parentNode(node)!),\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, null, parentComponent, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { props, patchFlag, shapeFlag, dirs } = vnode\r\n    // skip props & children if this is hoisted static nodes\r\n    if (patchFlag !== PatchFlags.HOISTED) {\r\n      // props\r\n      if (props) {\r\n        if (\r\n          !optimized ||\r\n          (patchFlag & PatchFlags.FULL_PROPS ||\r\n            patchFlag & PatchFlags.HYDRATE_EVENTS)\r\n        ) {\r\n          for (const key in props) {\r\n            if (!isReservedProp(key) && isOn(key)) {\r\n              patchProp(el, key, null, props[key])\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(el, 'onClick', null, props.onClick)\r\n        }\r\n      }\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (__DEV__ && !hasWarned) {\r\n            warn(\r\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\r\n                `server rendered element contains more child nodes than client vdom.`\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          __DEV__ &&\r\n            warn(\r\n              `Hydration text content mismatch in <${vnode.type as string}>:\\n` +\r\n                `- Client: ${el.textContent}\\n` +\r\n                `- Server: ${vnode.children as string}`\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n    }\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean\r\n  ): Node | null => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const children = vnode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized\r\n        )\r\n      } else {\r\n        hasMismatch = true\r\n        if (__DEV__ && !hasWarned) {\r\n          warn(\r\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n              `server rendered element contains fewer child nodes than client vdom.`\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVGContainer(container)\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      optimized\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isFragment: boolean\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    __DEV__ &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- Client vnode:`,\r\n        vnode.type,\r\n        `\\n- Server rendered DOM:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n            ? `(start of fragment)`\r\n            : ``\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAsyncAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      isSVGContainer(container)\r\n    )\r\n    return next\r\n  }\r\n\r\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === '[') match++\r\n        if (node.data === ']') {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n","import {\r\n  Text,\r\n  Fragment,\r\n  Comment,\r\n  cloneIfMounted,\r\n  normalizeVNode,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  createVNode,\r\n  isSameVNodeType,\r\n  Static,\r\n  VNodeNormalizedRef,\r\n  VNodeHook\r\n} from './vnode'\r\nimport {\r\n  ComponentInternalInstance,\r\n  createComponentInstance,\r\n  Data,\r\n  setupComponent\r\n} from './component'\r\nimport {\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl\r\n} from './componentRenderUtils'\r\nimport {\r\n  isString,\r\n  EMPTY_OBJ,\r\n  EMPTY_ARR,\r\n  isReservedProp,\r\n  isFunction,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  NOOP,\r\n  hasOwn,\r\n  invokeArrayFns,\r\n  isArray\r\n} from '@vue/shared'\r\nimport {\r\n  queueJob,\r\n  queuePostFlushCb,\r\n  flushPostFlushCbs,\r\n  invalidateJob,\r\n  flushPreFlushCbs\r\n} from './scheduler'\r\nimport { effect, stop, ReactiveEffectOptions, isRef } from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { pushWarningContext, popWarningContext, warn } from './warning'\r\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\r\nimport {\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense,\r\n  SuspenseImpl\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\r\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { ComponentPublicInstance } from './componentProxy'\r\nimport { devtoolsComponentRemoved, devtoolsComponentUpdated } from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    isSVG?: boolean,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn\r\n  ): void\r\n  forcePatchProp?(el: HostElement, key: string): boolean\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    isSVG?: boolean,\r\n    isCustomizedBuiltIn?: string\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    isSVG: boolean\r\n  ): HostElement[]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  isSVG?: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean,\r\n  start?: number\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  start?: number\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\nexport const enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER\r\n}\r\n\r\nconst prodEffectOptions = {\r\n  scheduler: queueJob\r\n}\r\n\r\nfunction createDevEffectOptions(\r\n  instance: ComponentInternalInstance\r\n): ReactiveEffectOptions {\r\n  return {\r\n    scheduler: queueJob,\r\n    onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc!, e) : void 0,\r\n    onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg!, e) : void 0\r\n  }\r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\nexport const setRef = (\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentComponent: ComponentInternalInstance,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode | null\r\n) => {\r\n  let value: ComponentPublicInstance | RendererNode | null\r\n  if (!vnode) {\r\n    value = null\r\n  } else {\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      value = vnode.component!.proxy\r\n    } else {\r\n      value = vnode.el\r\n    }\r\n  }\r\n\r\n  const [owner, ref] = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && oldRawRef[1]\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        queuePostRenderEffect(() => {\r\n          setupState[oldRef] = null\r\n        }, parentSuspense)\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isString(ref)) {\r\n    refs[ref] = value\r\n    if (hasOwn(setupState, ref)) {\r\n      queuePostRenderEffect(() => {\r\n        setupState[ref] = value\r\n      }, parentSuspense)\r\n    }\r\n  } else if (isRef(ref)) {\r\n    ref.value = value\r\n  } else if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, parentComponent, ErrorCodes.FUNCTION_REF, [\r\n      value,\r\n      refs\r\n    ])\r\n  } else if (__DEV__) {\r\n    warn('Invalid template ref type:', value, `(${typeof value})`)\r\n  }\r\n}\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    forcePatchProp: hostForcePatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    cloneNode: hostCloneNode,\r\n    insertStaticContent: hostInsertStaticContent\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    isSVG = false,\r\n    optimized = false\r\n  ) => {\r\n    // patching & not same type, unmount old tree\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, isSVG)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, isSVG)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      isSVG\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        isSVG\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const moveStaticNode = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null\r\n  ) => {\r\n    let cur = vnode.el\r\n    const end = vnode.anchor!\r\n    while (cur && cur !== end) {\r\n      const next = hostNextSibling(cur)\r\n      hostInsert(cur, container, anchor)\r\n      cur = next\r\n    }\r\n    hostInsert(end, container, anchor)\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const removeStaticNode = (vnode: VNode) => {\r\n    let cur = vnode.el\r\n    while (cur && cur !== vnode.anchor) {\r\n      const next = hostNextSibling(cur)\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(vnode.anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => {\r\n    isSVG = isSVG || (n2.type as string) === 'svg'\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized\r\n      )\r\n    } else {\r\n      patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized)\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const {\r\n      type,\r\n      props,\r\n      shapeFlag,\r\n      transition,\r\n      scopeId,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    if (\r\n      !__DEV__ &&\r\n      vnode.el &&\r\n      hostCloneNode !== undefined &&\r\n      patchFlag === PatchFlags.HOISTED\r\n    ) {\r\n      // If a vnode has non-null el, it means it's being reused.\r\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n      // exactly the same, and we can simply do a clone here.\r\n      // only do this in production since cloned trees cannot be HMR updated.\r\n      el = vnode.el = hostCloneNode(vnode.el)\r\n    } else {\r\n      el = vnode.el = hostCreateElement(\r\n        vnode.type as string,\r\n        isSVG,\r\n        props && props.is\r\n      )\r\n\r\n      // mount children first, since some props may rely on child content\r\n      // being already rendered, e.g. `<select value>`\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(el, vnode.children as string)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        mountChildren(\r\n          vnode.children as VNodeArrayChildren,\r\n          el,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG && type !== 'foreignObject',\r\n          optimized || !!vnode.dynamicChildren\r\n        )\r\n      }\r\n\r\n      // props\r\n      if (props) {\r\n        for (const key in props) {\r\n          if (!isReservedProp(key)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              null,\r\n              props[key],\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n        if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        }\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n\r\n      // scopeId\r\n      if (scopeId) {\r\n        hostSetScopeId(el, scopeId)\r\n      }\r\n      const treeOwnerId = parentComponent && parentComponent.type.__scopeId\r\n      // vnode's own scopeId and the current patched component's scopeId is\r\n      // different - this is a slot content node.\r\n      if (treeOwnerId && treeOwnerId !== scopeId) {\r\n        hostSetScopeId(el, treeOwnerId + '-s')\r\n      }\r\n\r\n      if (transition && !transition.persisted) {\r\n        transition.beforeEnter(el)\r\n      }\r\n    }\r\n\r\n    hostInsert(el, container, anchor)\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks =\r\n      (!parentSuspense || (parentSuspense && parentSuspense!.isResolved)) &&\r\n      transition &&\r\n      !transition.persisted\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a\r\n    // compiler-generated vnode, which de-opts to FULL_PROPS\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) {\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            if (\r\n              next !== prev ||\r\n              (hostForcePatchProp && hostForcePatchProp(el, key))\r\n            ) {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                isSVG,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG\r\n      )\r\n    }\r\n\r\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\r\n    if (dynamicChildren) {\r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG\r\n      )\r\n      if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        oldVNode.type === Fragment ||\r\n        // - In the case of different nodes, there is going to be a replacement\r\n        // which also requires the correct parent container\r\n        !isSameVNodeType(oldVNode, newVNode) ||\r\n        // - In the case of a component, it could contain anything.\r\n        oldVNode.shapeFlag & ShapeFlags.COMPONENT ||\r\n        oldVNode.shapeFlag & ShapeFlags.TELEPORT\r\n          ? hostParentNode(oldVNode.el!)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      for (const key in newProps) {\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        if (\r\n          next !== prev ||\r\n          (hostForcePatchProp && hostForcePatchProp(el, key))\r\n        ) {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            isSVG,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren\r\n          )\r\n        }\r\n      }\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren } = n2\r\n    if (patchFlag > 0) {\r\n      optimized = true\r\n    }\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        n2.children as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n          traverseStaticChildren(n1, n2)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => {\r\n    if (n1 == null) {\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    } else {\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    const instance: ComponentInternalInstance = (initialVNode.component = createComponentInstance(\r\n      initialVNode,\r\n      parentComponent,\r\n      parentSuspense\r\n    ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    if (__DEV__) {\r\n      startMeasure(instance, `init`)\r\n    }\r\n    setupComponent(instance)\r\n    if (__DEV__) {\r\n      endMeasure(instance, `init`)\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      if (!parentSuspense) {\r\n        if (__DEV__) warn('async setup() is used without a suspense boundary!')\r\n        return\r\n      }\r\n\r\n      parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n      return\r\n    }\r\n\r\n    setupRenderEffect(\r\n      instance,\r\n      initialVNode,\r\n      container,\r\n      anchor,\r\n      parentSuspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect runner.\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.component = n1.component\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    // create reactive effect for rendering\r\n    instance.update = effect(function componentEffect() {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, a, parent } = instance\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const subTree = (instance.subTree = renderComponentRoot(instance))\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (el && hydrateNode) {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `hydrate`)\r\n          }\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          hydrateNode(\r\n            initialVNode.el as Node,\r\n            subTree,\r\n            instance,\r\n            parentSuspense\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `hydrate`)\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if ((vnodeHook = props && props.onVnodeMounted)) {\r\n          queuePostRenderEffect(() => {\r\n            invokeVNodeHook(vnodeHook!, parent, initialVNode)\r\n          }, parentSuspense)\r\n        }\r\n        // activated hook for keep-alive roots.\r\n        if (\r\n          a &&\r\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n        ) {\r\n          queuePostRenderEffect(a, parentSuspense)\r\n        }\r\n        instance.isMounted = true\r\n      } else {\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let { next, bu, u, parent, vnode } = instance\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        if (next) {\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n        next.el = vnode.el\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        // reset refs\r\n        // only needed if previous patch had refs\r\n        if (instance.refs !== EMPTY_OBJ) {\r\n          instance.refs = {}\r\n        }\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(() => {\r\n            invokeVNodeHook(vnodeHook!, parent, next!, vnode)\r\n          }, parentSuspense)\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }, __DEV__ ? createDevEffectOptions(instance) : prodEffectOptions)\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      optimized = false\r\n    }\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children)\r\n\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(undefined, instance.update)\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized = false\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(c1, parentComponent, parentSuspense, true, commonLength)\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized,\r\n        commonLength\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren\r\n      const keyToNewIndexMap: Map<string | number, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1\r\n      let moved = false\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) {\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    // static node move can only happen when force updating HMR\r\n    if (__DEV__ && type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, null, parentComponent, parentSuspense, null)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(dynamicChildren, parentComponent, parentSuspense)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      // an unmounted teleport should always remove its children\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(vnode, internals)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      removeFragment(el!, anchor!)\r\n      return\r\n    }\r\n\r\n    if (__DEV__ && type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, effects, update, subTree, um, da, isDeactivated } = instance\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n    if (effects) {\r\n      for (let i = 0; i < effects.length; i++) {\r\n        stop(effects[i])\r\n      }\r\n    }\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      stop(update)\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    // deactivated hook\r\n    if (\r\n      da &&\r\n      !isDeactivated &&\r\n      instance.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n    ) {\r\n      queuePostRenderEffect(da, parentSuspense)\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      !parentSuspense.isResolved &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  /**\r\n   * #1156\r\n   * When a component is HMR-enabled, we need to make sure that all static nodes\r\n   * inside a block also inherit the DOM element from the previous tree so that\r\n   * HMR updates (which are full updates) can retrieve the element for patching.\r\n   *\r\n   * Dev only.\r\n   */\r\n  const traverseStaticChildren = (n1: VNode, n2: VNode) => {\r\n    const ch1 = n1.children\r\n    const ch2 = n2.children\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n      for (let i = 0; i < ch1.length; i++) {\r\n        // this is only called in the optimized path so array children are\r\n        // guaranteed to be vnodes\r\n        const c1 = ch1[i] as VNode\r\n        const c2 = (ch2[i] = cloneIfMounted(ch2[i] as VNode))\r\n        if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n          if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\r\n            c2.el = c1.el\r\n          }\r\n          traverseStaticChildren(c1, c2)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const render: RootRenderFunction = (vnode, container) => {\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(container._vnode || null, vnode, container)\r\n    }\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(internals as RendererInternals<\r\n      Node,\r\n      Element\r\n    >)\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate)\r\n  }\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode\r\n  ])\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = ((u + v) / 2) | 0\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n","import { VNode, VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  ReactiveEffect,\r\n  pauseTracking,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  proxyRefs\r\n} from '@vue/reactivity'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance,\r\n  PublicInstanceProxyHandlers,\r\n  RuntimeCompiledPublicInstanceProxyHandlers,\r\n  createRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext\r\n} from './componentProxy'\r\nimport {\r\n  ComponentPropsOptions,\r\n  NormalizedPropsOptions,\r\n  initProps\r\n} from './componentProps'\r\nimport { Slots, initSlots, InternalSlots } from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\r\nimport { validateDirectiveName } from './directives'\r\nimport { applyOptions, ComponentOptions } from './componentOptions'\r\nimport {\r\n  EmitsOptions,\r\n  ObjectEmitsOptions,\r\n  EmitFn,\r\n  emit\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isFunction,\r\n  NOOP,\r\n  isObject,\r\n  NO,\r\n  makeMap,\r\n  isPromise,\r\n  ShapeFlags\r\n} from '@vue/shared'\r\nimport { SuspenseBoundary } from './components/Suspense'\r\nimport { CompilerOptions } from '@vue/compiler-core'\r\nimport {\r\n  currentRenderingInstance,\r\n  markAttrsAccessed\r\n} from './componentRenderUtils'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { devtoolsComponentAdded } from './devtools'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on ocmponent in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __props?: NormalizedPropsOptions | []\r\n  /**\r\n   * @internal\r\n   */\r\n  __emits?: ObjectEmitsOptions\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n}\r\n\r\nexport interface FunctionalComponent<P = {}, E extends EmitsOptions = {}>\r\n  extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (props: P, ctx: SetupContext<E>): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: E | (keyof E)[]\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\nexport type Component = ComponentOptions | FunctionalComponent<any>\r\n\r\n// A type used in public APIs where a component type is expected.\r\n// The constructor type is an artificial type returned by defineComponent().\r\nexport type PublicAPIComponent =\r\n  | Component\r\n  | {\r\n      new (...args: any[]): CreateComponentPublicInstance<\r\n        any,\r\n        any,\r\n        any,\r\n        any,\r\n        any\r\n      >\r\n    }\r\n\r\nexport { ComponentOptions }\r\n\r\ntype LifecycleHook = Function[] | null\r\n\r\nexport const enum LifecycleHooks {\r\n  BEFORE_CREATE = 'bc',\r\n  CREATED = 'c',\r\n  BEFORE_MOUNT = 'bm',\r\n  MOUNTED = 'm',\r\n  BEFORE_UPDATE = 'bu',\r\n  UPDATED = 'u',\r\n  BEFORE_UNMOUNT = 'bum',\r\n  UNMOUNTED = 'um',\r\n  DEACTIVATED = 'da',\r\n  ACTIVATED = 'a',\r\n  RENDER_TRIGGERED = 'rtg',\r\n  RENDER_TRACKED = 'rtc',\r\n  ERROR_CAPTURED = 'ec'\r\n}\r\n\r\nexport interface SetupContext<E = EmitsOptions> {\r\n  attrs: Data\r\n  slots: Slots\r\n  emit: EmitFn<E>\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: Component\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * The reactive effect for rendering and patching the component. Callable.\r\n   */\r\n  update: ReactiveEffect\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * Object containing values this component provides for its descendents\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  effects: ReactiveEffect[] | null\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // internal state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n  // used for keeping track of .once event handlers on components\r\n  emitted: Record<string, boolean> | null\r\n\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null\r\n) {\r\n  const type = vnode.type as Component\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++,\r\n    vnode,\r\n    type,\r\n    parent,\r\n    appContext,\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    update: null!, // will be set synchronously right after creation\r\n    render: null,\r\n    proxy: null,\r\n    withProxy: null,\r\n    effects: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    emit: null as any, // to be set immediately\r\n    emitted: null\r\n  }\r\n  if (__DEV__) {\r\n    instance.ctx = createRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentAdded(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nexport const setCurrentInstance = (\r\n  instance: ComponentInternalInstance | null\r\n) => {\r\n  currentInstance = instance\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name\r\n    )\r\n  }\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false\r\n) {\r\n  isInSSRComponentSetup = isSSR\r\n\r\n  const { props, children, shapeFlag } = instance.vnode\r\n  const isStateful = shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n  isInSSRComponentSetup = false\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  instance.accessCache = {}\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers)\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    currentInstance = instance\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\r\n    )\r\n    resetTracking()\r\n    currentInstance = null\r\n\r\n    if (isPromise(setupResult)) {\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult.then((resolvedResult: unknown) => {\r\n          handleSetupResult(instance, resolvedResult, isSSR)\r\n        })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    instance.render = setupResult as InternalRenderFunction\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n}\r\n\r\nfunction finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  // template / render function normalization\r\n  if (__NODE_JS__ && isSSR) {\r\n    if (Component.render) {\r\n      instance.render = Component.render as InternalRenderFunction\r\n    }\r\n  } else if (!instance.render) {\r\n    // could be set from setup()\r\n    if (compile && Component.template && !Component.render) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `compile`)\r\n      }\r\n      Component.render = compile(Component.template, {\r\n        isCustomElement: instance.appContext.config.isCustomElement,\r\n        delimiters: Component.delimiters\r\n      })\r\n      if (__DEV__) {\r\n        endMeasure(instance, `compile`)\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (instance.render._rc) {\r\n      instance.withProxy = new Proxy(\r\n        instance.ctx,\r\n        RuntimeCompiledPublicInstanceProxyHandlers\r\n      )\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__) {\r\n    currentInstance = instance\r\n    applyOptions(instance, Component)\r\n    currentInstance = null\r\n  }\r\n\r\n  // warn missing template/render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n              ? ` Use \"vue.esm-browser.js\" instead.`\r\n              : __GLOBAL__\r\n                ? ` Use \"vue.global.js\" instead.`\r\n                : ``) /* should not happen */\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nconst attrHandlers: ProxyHandler<Data> = {\r\n  get: (target, key: string) => {\r\n    if (__DEV__) {\r\n      markAttrsAccessed()\r\n    }\r\n    return target[key]\r\n  },\r\n  set: () => {\r\n    warn(`setupContext.attrs is readonly.`)\r\n    return false\r\n  },\r\n  deleteProperty: () => {\r\n    warn(`setupContext.attrs is readonly.`)\r\n    return false\r\n  }\r\n}\r\n\r\nfunction createSetupContext(instance: ComponentInternalInstance): SetupContext {\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return new Proxy(instance.attrs, attrHandlers)\r\n      },\r\n      get slots() {\r\n        return shallowReadonly(instance.slots)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      }\r\n    })\r\n  } else {\r\n    return {\r\n      attrs: instance.attrs,\r\n      slots: instance.slots,\r\n      emit: instance.emit\r\n    }\r\n  }\r\n}\r\n\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nexport function recordInstanceBoundEffect(effect: ReactiveEffect) {\r\n  if (currentInstance) {\r\n    ;(currentInstance.effects || (currentInstance.effects = [])).push(effect)\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: Component,\r\n  isRoot = false\r\n): string {\r\n  let name = isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.vue$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        (instance.parent.type as ComponentOptions).components\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n","import {\r\n  effect,\r\n  stop,\r\n  isRef,\r\n  Ref,\r\n  ComputedRef,\r\n  ReactiveEffectOptions,\r\n  isReactive\r\n} from '@vue/reactivity'\r\nimport { SchedulerJob, queuePreFlushCb } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isObject,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  hasChanged,\r\n  NOOP,\r\n  remove\r\n} from '@vue/shared'\r\nimport {\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  recordInstanceBoundEffect\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\n\r\nexport type WatchEffect = (onInvalidate: InvalidateCbRegistrator) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onInvalidate: InvalidateCbRegistrator\r\n) => any\r\n\r\ntype MapSources<T> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? V\r\n    : T[K] extends object ? T[K] : never\r\n}\r\n\r\ntype MapOldSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true ? (V | undefined) : V\r\n    : T[K] extends object\r\n      ? Immediate extends true ? (T[K] | undefined) : T[K]\r\n      : never\r\n}\r\n\r\ntype InvalidateCbRegistrator = (cb: () => void) => void\r\n\r\nexport interface WatchOptionsBase {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n  onTrack?: ReactiveEffectOptions['onTrack']\r\n  onTrigger?: ReactiveEffectOptions['onTrigger']\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\n// overload #1: array of multiple sources + cb\r\n// Readonly constraint helps the callback to correctly infer value types based\r\n// on position in the source array. Otherwise the values will get a union type\r\n// of all possible value types.\r\nexport function watch<\r\n  T extends Readonly<Array<WatchSource<unknown> | object>>,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  sources: T,\r\n  cb: WatchCallback<MapSources<T>, MapOldSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload #2: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? (T | undefined) : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload #3: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? (T | undefined) : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any>(\r\n  source: WatchSource<T> | WatchSource<T>[],\r\n  cb: WatchCallback<T>,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`\r\n    )\r\n  }\r\n  return doWatch(source, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect,\r\n  cb: WatchCallback | null,\r\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ,\r\n  instance = currentInstance\r\n): WatchStopHandle {\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`\r\n    )\r\n  }\r\n\r\n  let getter: () => any\r\n  const isRefSource = isRef(source)\r\n  if (isRefSource) {\r\n    getter = () => (source as Ref).value\r\n  } else if (isReactive(source)) {\r\n    getter = () => source\r\n    deep = true\r\n  } else if (isArray(source)) {\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return traverse(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (instance && instance.isUnmounted) {\r\n          return\r\n        }\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onInvalidate]\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: () => void\r\n  const onInvalidate: InvalidateCbRegistrator = (fn: () => void) => {\r\n    cleanup = runner.options.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager\r\n  if (__NODE_JS__ && isInSSRComponentSetup) {\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        undefined,\r\n        onInvalidate\r\n      ])\r\n    }\r\n    return NOOP\r\n  }\r\n\r\n  let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!runner.active) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = runner()\r\n      if (deep || isRefSource || hasChanged(newValue, oldValue)) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n          onInvalidate\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      runner()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows it\r\n  // it is allowed to self-trigger (#1727)\r\n  job.cb = !!cb\r\n\r\n  let scheduler: (job: () => any) => void\r\n  if (flush === 'sync') {\r\n    scheduler = job\r\n  } else if (flush === 'pre') {\r\n    // ensure it's queued before component updates (which have positive ids)\r\n    job.id = -1\r\n    scheduler = () => {\r\n      if (!instance || instance.isMounted) {\r\n        queuePreFlushCb(job)\r\n      } else {\r\n        // with 'pre' option, the first call must happen before\r\n        // the component is mounted so it is called synchronously.\r\n        job()\r\n      }\r\n    }\r\n  } else {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  }\r\n\r\n  const runner = effect(getter, {\r\n    lazy: true,\r\n    onTrack,\r\n    onTrigger,\r\n    scheduler\r\n  })\r\n\r\n  recordInstanceBoundEffect(runner)\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = runner()\r\n    }\r\n  } else {\r\n    runner()\r\n  }\r\n\r\n  return () => {\r\n    stop(runner)\r\n    if (instance) {\r\n      remove(instance.effects!, runner)\r\n    }\r\n  }\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  cb: Function,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? () => publicThis[source]\r\n    : source.bind(publicThis)\r\n  return doWatch(getter, cb.bind(publicThis), options, this)\r\n}\r\n\r\nfunction traverse(value: unknown, seen: Set<unknown> = new Set()) {\r\n  if (!isObject(value) || seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen)\r\n    }\r\n  } else if (value instanceof Map) {\r\n    value.forEach((v, key) => {\r\n      // to register mutation dep for existing keys\r\n      traverse(value.get(key), seen)\r\n    })\r\n  } else if (value instanceof Set) {\r\n    value.forEach(v => {\r\n      traverse(v, seen)\r\n    })\r\n  } else {\r\n    for (const key in value) {\r\n      traverse(value[key], seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","import { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderUtils'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T>(key: InjectionKey<T> | string, value: T) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(key: InjectionKey<T> | string, defaultValue: T): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n  if (instance) {\r\n    const provides = instance.provides\r\n    if (key in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  SetupContext,\r\n  ComponentInternalOptions,\r\n  PublicAPIComponent,\r\n  Component,\r\n  InternalRenderFunction\r\n} from './component'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  EMPTY_OBJ,\r\n  NOOP,\r\n  hasOwn,\r\n  isPromise\r\n} from '@vue/shared'\r\nimport { computed } from './apiComputed'\r\nimport { watch, WatchOptions, WatchCallback } from './apiWatch'\r\nimport { provide, inject } from './apiInject'\r\nimport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onErrorCaptured,\r\n  onRenderTracked,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTriggered,\r\n  DebuggerHook,\r\n  ErrorCapturedHook\r\n} from './apiLifecycle'\r\nimport {\r\n  reactive,\r\n  ComputedGetter,\r\n  WritableComputedOptions,\r\n  toRaw\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  normalizePropsOptions\r\n} from './componentProps'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { Directive } from './directives'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance\r\n} from './componentProxy'\r\nimport { warn } from './warning'\r\nimport { VNodeChild } from './vnode'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string\r\n>\r\n  extends LegacyOptions<Props, D, C, M, Mixin, Extends>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: Props,\r\n    ctx: SetupContext<E>\r\n  ) => RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, PublicAPIComponent>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: E | EE[]\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   *\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ) => void\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<Component>\r\n  /**\r\n   * cache for merged $options\r\n   * @internal\r\n   */\r\n  __merged?: ComponentOptions\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E, EE> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }>\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E, EE> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<ExtractPropTypes<PropsOptions>>\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E, EE> & {\r\n  props: PropsOptions\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions =\r\n  | ComponentOptionsWithoutProps<any, any, any, any, any>\r\n  | ComponentOptionsWithObjectProps<any, any, any, any, any>\r\n  | ComponentOptionsWithArrayProps<any, any, any, any, any>\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn ? TReturn : never\r\n}\r\n\r\ntype WatchOptionItem =\r\n  | string\r\n  | WatchCallback\r\n  | { handler: WatchCallback | string } & WatchOptions\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\ntype ComponentInjectOptions =\r\n  | string[]\r\n  | Record<\r\n      string | symbol,\r\n      string | symbol | { from: string | symbol; default?: unknown }\r\n    >\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin\r\n> {\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<Props>,\r\n    vm: CreateComponentPublicInstance<Props>\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: Data | Function\r\n  inject?: ComponentInjectOptions\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  beforeUnmount?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  // runtime compile only\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {}\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n}\r\n\r\nconst enum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject'\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\ntype DataFn = (vm: ComponentPublicInstance) => any\r\n\r\nexport let isInBeforeCreate = false\r\n\r\nexport function applyOptions(\r\n  instance: ComponentInternalInstance,\r\n  options: ComponentOptions,\r\n  deferredData: DataFn[] = [],\r\n  deferredWatch: ComponentWatchOptions[] = [],\r\n  asMixin: boolean = false\r\n) {\r\n  const {\r\n    // composition\r\n    mixins,\r\n    extends: extendsOptions,\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeUnmount,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured\r\n  } = options\r\n\r\n  const publicThis = instance.proxy!\r\n  const ctx = instance.ctx\r\n  const globalMixins = instance.appContext.mixins\r\n\r\n  if (asMixin && render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n\r\n  // applyOptions is called non-as-mixin once per instance\r\n  if (!asMixin) {\r\n    isInBeforeCreate = true\r\n    callSyncHook('beforeCreate', options, publicThis, globalMixins)\r\n    isInBeforeCreate = false\r\n    // global mixins are applied first\r\n    applyMixins(instance, globalMixins, deferredData, deferredWatch)\r\n  }\r\n\r\n  // extending a base component...\r\n  if (extendsOptions) {\r\n    applyOptions(instance, extendsOptions, deferredData, deferredWatch, true)\r\n  }\r\n  // local mixins\r\n  if (mixins) {\r\n    applyMixins(instance, mixins, deferredData, deferredWatch)\r\n  }\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const propsOptions = normalizePropsOptions(options)[0]\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    if (isArray(injectOptions)) {\r\n      for (let i = 0; i < injectOptions.length; i++) {\r\n        const key = injectOptions[i]\r\n        ctx[key] = inject(key)\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n        }\r\n      }\r\n    } else {\r\n      for (const key in injectOptions) {\r\n        const opt = injectOptions[key]\r\n        if (isObject(opt)) {\r\n          ctx[key] = inject(opt.from, opt.default)\r\n        } else {\r\n          ctx[key] = inject(opt)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        ctx[key] = methodHandler.bind(publicThis)\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`\r\n      )\r\n    }\r\n\r\n    if (asMixin) {\r\n      deferredData.push(dataOptions as DataFn)\r\n    } else {\r\n      resolveData(instance, dataOptions, publicThis)\r\n    }\r\n  }\r\n  if (!asMixin) {\r\n    if (deferredData.length) {\r\n      deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis))\r\n    }\r\n    if (__DEV__) {\r\n      const rawData = toRaw(instance.data)\r\n      for (const key in rawData) {\r\n        checkDuplicateProperties!(OptionTypes.DATA, key)\r\n        // expose data on ctx during dev\r\n        if (key[0] !== '$' && key[0] !== '_') {\r\n          Object.defineProperty(ctx, key, {\r\n            configurable: true,\r\n            enumerable: true,\r\n            get: () => rawData[key],\r\n            set: NOOP\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n          ? opt.get.bind(publicThis, publicThis)\r\n          : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n            ? () => {\r\n                warn(\r\n                  `Write operation failed: computed property \"${key}\" is readonly.`\r\n                )\r\n              }\r\n            : NOOP\r\n      const c = computed({\r\n        get,\r\n        set\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v)\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    deferredWatch.push(watchOptions)\r\n  }\r\n  if (!asMixin && deferredWatch.length) {\r\n    deferredWatch.forEach(watchOptions => {\r\n      for (const key in watchOptions) {\r\n        createWatcher(watchOptions[key], ctx, publicThis, key)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    for (const key in provides) {\r\n      provide(key, provides[key])\r\n    }\r\n  }\r\n\r\n  // lifecycle options\r\n  if (!asMixin) {\r\n    callSyncHook('created', options, publicThis, globalMixins)\r\n  }\r\n  if (beforeMount) {\r\n    onBeforeMount(beforeMount.bind(publicThis))\r\n  }\r\n  if (mounted) {\r\n    onMounted(mounted.bind(publicThis))\r\n  }\r\n  if (beforeUpdate) {\r\n    onBeforeUpdate(beforeUpdate.bind(publicThis))\r\n  }\r\n  if (updated) {\r\n    onUpdated(updated.bind(publicThis))\r\n  }\r\n  if (activated) {\r\n    onActivated(activated.bind(publicThis))\r\n  }\r\n  if (deactivated) {\r\n    onDeactivated(deactivated.bind(publicThis))\r\n  }\r\n  if (errorCaptured) {\r\n    onErrorCaptured(errorCaptured.bind(publicThis))\r\n  }\r\n  if (renderTracked) {\r\n    onRenderTracked(renderTracked.bind(publicThis))\r\n  }\r\n  if (renderTriggered) {\r\n    onRenderTriggered(renderTriggered.bind(publicThis))\r\n  }\r\n  if (beforeUnmount) {\r\n    onBeforeUnmount(beforeUnmount.bind(publicThis))\r\n  }\r\n  if (unmounted) {\r\n    onUnmounted(unmounted.bind(publicThis))\r\n  }\r\n}\r\n\r\nfunction callSyncHook(\r\n  name: 'beforeCreate' | 'created',\r\n  options: ComponentOptions,\r\n  ctx: ComponentPublicInstance,\r\n  globalMixins: ComponentOptions[]\r\n) {\r\n  callHookFromMixins(name, globalMixins, ctx)\r\n  const baseHook = options.extends && options.extends[name]\r\n  if (baseHook) {\r\n    baseHook.call(ctx)\r\n  }\r\n  const mixins = options.mixins\r\n  if (mixins) {\r\n    callHookFromMixins(name, mixins, ctx)\r\n  }\r\n  const selfHook = options[name]\r\n  if (selfHook) {\r\n    selfHook.call(ctx)\r\n  }\r\n}\r\n\r\nfunction callHookFromMixins(\r\n  name: 'beforeCreate' | 'created',\r\n  mixins: ComponentOptions[],\r\n  ctx: ComponentPublicInstance\r\n) {\r\n  for (let i = 0; i < mixins.length; i++) {\r\n    const fn = mixins[i][name]\r\n    if (fn) {\r\n      fn.call(ctx)\r\n    }\r\n  }\r\n}\r\n\r\nfunction applyMixins(\r\n  instance: ComponentInternalInstance,\r\n  mixins: ComponentOptions[],\r\n  deferredData: DataFn[],\r\n  deferredWatch: ComponentWatchOptions[]\r\n) {\r\n  for (let i = 0; i < mixins.length; i++) {\r\n    applyOptions(instance, mixins[i], deferredData, deferredWatch, true)\r\n  }\r\n}\r\n\r\nfunction resolveData(\r\n  instance: ComponentInternalInstance,\r\n  dataFn: DataFn,\r\n  publicThis: ComponentPublicInstance\r\n) {\r\n  const data = dataFn.call(publicThis, publicThis)\r\n  if (__DEV__ && isPromise(data)) {\r\n    warn(\r\n      `data() returned a Promise - note data() cannot be async; If you ` +\r\n        `intend to perform data fetching before component renders, use ` +\r\n        `async setup() + <Suspense>.`\r\n    )\r\n  }\r\n  if (!isObject(data)) {\r\n    __DEV__ && warn(`data() should return an object.`)\r\n  } else if (instance.data === EMPTY_OBJ) {\r\n    instance.data = reactive(data)\r\n  } else {\r\n    // existing data: this is a mixin or extends.\r\n    extend(instance.data, data)\r\n  }\r\n}\r\n\r\nfunction createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string\r\n) {\r\n  const getter = () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`)\r\n  }\r\n}\r\n\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance\r\n): ComponentOptions {\r\n  const raw = instance.type as ComponentOptions\r\n  const { __merged, mixins, extends: extendsOptions } = raw\r\n  if (__merged) return __merged\r\n  const globalMixins = instance.appContext.mixins\r\n  if (!globalMixins.length && !mixins && !extendsOptions) return raw\r\n  const options = {}\r\n  globalMixins.forEach(m => mergeOptions(options, m, instance))\r\n  extendsOptions && mergeOptions(options, extendsOptions, instance)\r\n  mixins && mixins.forEach(m => mergeOptions(options, m, instance))\r\n  mergeOptions(options, raw, instance)\r\n  return (raw.__merged = options)\r\n}\r\n\r\nfunction mergeOptions(to: any, from: any, instance: ComponentInternalInstance) {\r\n  const strats = instance.appContext.config.optionMergeStrategies\r\n  for (const key in from) {\r\n    if (strats && hasOwn(strats, key)) {\r\n      to[key] = strats[key](to[key], from[key], instance.proxy, key)\r\n    } else if (!hasOwn(to, key)) {\r\n      to[key] = from[key]\r\n    }\r\n  }\r\n}\r\n","import { ComponentInternalInstance, Data } from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport { instanceWatch } from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isGloballyWhitelisted,\r\n  NOOP,\r\n  extend,\r\n  isString\r\n} from '@vue/shared'\r\nimport {\r\n  ReactiveEffect,\r\n  toRaw,\r\n  shallowReadonly,\r\n  ReactiveFlags,\r\n  track,\r\n  TrackOpTypes,\r\n  ShallowUnwrapRef\r\n} from '@vue/reactivity'\r\nimport {\r\n  ExtractComputedReturns,\r\n  ComponentOptionsBase,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsMixin,\r\n  OptionTypesType,\r\n  OptionTypesKeys,\r\n  resolveMergedOptions,\r\n  isInBeforeCreate\r\n} from './componentOptions'\r\nimport { normalizePropsOptions } from './componentProps'\r\nimport { EmitsOptions, EmitFn } from './componentEmits'\r\nimport { Slots } from './componentSlots'\r\nimport {\r\n  currentRenderingInstance,\r\n  markAttrsAccessed\r\n} from './componentRenderUtils'\r\nimport { warn } from './warning'\r\nimport { UnionToIntersection } from './helpers/typeUtils'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T ? true : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\r\n  infer P,\r\n  infer B,\r\n  infer D,\r\n  infer C,\r\n  infer M,\r\n  infer Mixin,\r\n  infer Extends,\r\n  any\r\n>\r\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}> &\r\n      IntersectionMixin<Mixin> &\r\n      IntersectionMixin<Extends>\r\n  : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\ntype IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\r\n  ? OptionTypesType<{}, {}, {}, {}, {}>\r\n  : UnionToIntersection<ExtractMixin<T>>\r\n\r\ntype UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  ComponentOptionsBase<P, B, D, C, M, Mixin, Extends, E>\r\n>\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any>\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: P & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: Slots\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options\r\n  $forceUpdate: ReactiveEffect\r\n  $nextTick: typeof nextTick\r\n  $watch: typeof instanceWatch\r\n} & P &\r\n  ShallowUnwrapRef<B> &\r\n  D &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance\r\n> = {\r\n  new (): T\r\n}\r\n\r\ntype PublicPropertiesMap = Record<string, (i: ComponentInternalInstance) => any>\r\n\r\nconst publicPropertiesMap: PublicPropertiesMap = extend(Object.create(null), {\r\n  $: i => i,\r\n  $el: i => i.vnode.el,\r\n  $data: i => i.data,\r\n  $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n  $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n  $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n  $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n  $parent: i => i.parent && i.parent.proxy,\r\n  $root: i => i.root && i.root.proxy,\r\n  $emit: i => i.emit,\r\n  $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n  $forceUpdate: i => () => queueJob(i.update),\r\n  $nextTick: () => nextTick,\r\n  $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n} as PublicPropertiesMap)\r\n\r\nconst enum AccessTypes {\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT,\r\n  OTHER\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const {\r\n      ctx,\r\n      setupState,\r\n      data,\r\n      props,\r\n      accessCache,\r\n      type,\r\n      appContext\r\n    } = instance\r\n\r\n    // let @vue/reactivity know it should never observe Vue public instances.\r\n    if (key === ReactiveFlags.SKIP) {\r\n      return true\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = normalizePropsOptions(type)[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || !isInBeforeCreate) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      return globalProperties[key]\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (data !== EMPTY_OBJ && key[0] === '$' && hasOwn(data, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character and is not proxied on the render context.`\r\n        )\r\n      } else {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n      setupState[key] = value\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n    } else if (key in instance.props) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate prop \"${key}\". Props are readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, type, appContext }\r\n    }: ComponentRenderContext,\r\n    key: string\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      accessCache![key] !== undefined ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n      ((normalizedProps = normalizePropsOptions(type)[0]) &&\r\n        hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  }\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyWhitelisted(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`\r\n        )\r\n      }\r\n      return has\r\n    }\r\n  }\r\n)\r\n\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  // expose global properties\r\n  const { globalProperties } = instance.appContext.config\r\n  Object.keys(globalProperties).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => globalProperties[key],\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, type } = instance\r\n  const propsOptions = normalizePropsOptions(type)[0]\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    Object.defineProperty(ctx, key, {\r\n      enumerable: true,\r\n      configurable: true,\r\n      get: () => setupState[key],\r\n      set: NOOP\r\n    })\r\n  })\r\n}\r\n","import {\r\n  computed as _computed,\r\n  ComputedRef,\r\n  WritableComputedOptions,\r\n  WritableComputedRef,\r\n  ComputedGetter\r\n} from '@vue/reactivity'\r\nimport { recordInstanceBoundEffect } from './component'\r\n\r\nexport function computed<T>(getter: ComputedGetter<T>): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>\r\n) {\r\n  const c = _computed(getterOrOptions as any)\r\n  recordInstanceBoundEffect(c.effect)\r\n  return c\r\n}\r\n","import { effect, ReactiveEffect, trigger, track } from './effect'\r\nimport { TriggerOpTypes, TrackOpTypes } from './operations'\r\nimport { Ref } from './ref'\r\nimport { isFunction, NOOP } from '@vue/shared'\r\nimport { ReactiveFlags } from './reactive'\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (ctx?: any) => T\r\nexport type ComputedSetter<T> = (v: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nexport function computed<T>(getter: ComputedGetter<T>): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  if (isFunction(getterOrOptions)) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  let dirty = true\r\n  let value: T\r\n  let computed: ComputedRef<T>\r\n\r\n  const runner = effect(getter, {\r\n    lazy: true,\r\n    scheduler: () => {\r\n      if (!dirty) {\r\n        dirty = true\r\n        trigger(computed, TriggerOpTypes.SET, 'value')\r\n      }\r\n    }\r\n  })\r\n  computed = {\r\n    __v_isRef: true,\r\n    [ReactiveFlags.IS_READONLY]:\r\n      isFunction(getterOrOptions) || !getterOrOptions.set,\r\n\r\n    // expose effect so computed can be stopped\r\n    effect: runner,\r\n    get value() {\r\n      if (dirty) {\r\n        value = runner()\r\n        dirty = false\r\n      }\r\n      track(computed, TrackOpTypes.GET, 'value')\r\n      return value\r\n    },\r\n    set value(newValue: T) {\r\n      setter(newValue)\r\n    }\r\n  } as any\r\n  return computed\r\n}\r\n","import {\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsMixin,\r\n  RenderFunction\r\n} from './componentOptions'\r\nimport {\r\n  SetupContext,\r\n  FunctionalComponent,\r\n  AllowedComponentProps,\r\n  ComponentCustomProps\r\n} from './component'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstanceConstructor\r\n} from './componentProxy'\r\nimport { ExtractPropTypes, ComponentPropsOptions } from './componentProps'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { isFunction } from '@vue/shared'\r\nimport { VNodeProps } from './vnode'\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    {},\r\n    {},\r\n    {},\r\n    {},\r\n    {},\r\n    {},\r\n    // public props\r\n    VNodeProps & Props & AllowedComponentProps & ComponentCustomProps\r\n  >\r\n> &\r\n  FunctionalComponent<Props>\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    VNodeProps & Props & AllowedComponentProps & ComponentCustomProps\r\n  >\r\n> &\r\n  ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): ComponentPublicInstanceConstructor<\r\n  // array props technically doesn't place any constraints on props in TSX before,\r\n  // but now we can export array props in TSX\r\n  CreateComponentPublicInstance<\r\n    Readonly<{ [key in PropNames]?: any }>,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    AllowedComponentProps & ComponentCustomProps\r\n  >\r\n> &\r\n  ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    ExtractPropTypes<PropsOptions, false>,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    VNodeProps & AllowedComponentProps & ComponentCustomProps\r\n  >\r\n> &\r\n  ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n\r\n// implementation, close to no-op\r\nexport function defineComponent(options: unknown) {\r\n  return isFunction(options)\r\n    ? { setup: options, name: options.name }\r\n    : options\r\n}\r\n","import {\r\n  PublicAPIComponent,\r\n  Component,\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { ComponentPublicInstance } from './componentProxy'\r\nimport { createVNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\n\r\nexport type AsyncComponentResolveResult<T = PublicAPIComponent> =\r\n  | T\r\n  | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: PublicAPIComponent\r\n  errorComponent?: PublicAPIComponent\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number\r\n  ) => any\r\n}\r\n\r\nexport function defineAsyncComponent<\r\n  T extends PublicAPIComponent = { new (): ComponentPublicInstance }\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent: loadingComponent,\r\n    errorComponent: errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError\r\n  } = source\r\n\r\n  let pendingRequest: Promise<Component> | null = null\r\n  let resolvedComp: Component | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<Component> => {\r\n    let thisRequest: Promise<Component>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest = loader()\r\n        .catch(err => {\r\n          err = err instanceof Error ? err : new Error(String(err))\r\n          if (userOnError) {\r\n            return new Promise((resolve, reject) => {\r\n              const userRetry = () => resolve(retry())\r\n              const userFail = () => reject(err)\r\n              userOnError(err, userRetry, userFail, retries + 1)\r\n            })\r\n          } else {\r\n            throw err\r\n          }\r\n        })\r\n        .then((comp: any) => {\r\n          if (thisRequest !== pendingRequest && pendingRequest) {\r\n            return pendingRequest\r\n          }\r\n          if (__DEV__ && !comp) {\r\n            warn(\r\n              `Async component loader resolved to undefined. ` +\r\n                `If you are using retry(), make sure to return its return value.`\r\n            )\r\n          }\r\n          // interop module default\r\n          if (\r\n            comp &&\r\n            (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n          ) {\r\n            comp = comp.default\r\n          }\r\n          if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n            throw new Error(`Invalid async component load result: ${comp}`)\r\n          }\r\n          resolvedComp = comp\r\n          return comp\r\n        }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    __asyncLoader: load,\r\n    name: 'AsyncComponentWrapper',\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(err, instance, ErrorCodes.ASYNC_COMPONENT_LOADER)\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__NODE_JS__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as Component, { error: err })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent as Component, {\r\n            error: error.value\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent as Component)\r\n        }\r\n      }\r\n    }\r\n  }) as any\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: Component,\r\n  { vnode: { props, children } }: ComponentInternalInstance\r\n) {\r\n  return createVNode(comp, props, children)\r\n}\r\n","import {\r\n  VNode,\r\n  VNodeProps,\r\n  createVNode,\r\n  VNodeArrayChildren,\r\n  Fragment,\r\n  isVNode\r\n} from './vnode'\r\nimport { Teleport, TeleportProps } from './components/Teleport'\r\nimport { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { isObject, isArray } from '@vue/shared'\r\nimport { RawSlots } from './componentSlots'\r\nimport { FunctionalComponent, Component } from './component'\r\nimport { ComponentOptions } from './componentOptions'\r\nimport { EmitsOptions } from './componentEmits'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & { [key: string]: any }\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (): { $props: P }\r\n}\r\n\r\n// Excludes Component type from returned `defineComponent`\r\ntype NotDefinedComponent<T extends Component> = T extends Constructor\r\n  ? never\r\n  : T\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// functional component\r\nexport function h<P, E extends EmitsOptions = {}>(\r\n  type: FunctionalComponent<P, E>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// exclude `defineComponent`\r\nexport function h<Options extends ComponentOptions | FunctionalComponent<{}>>(\r\n  type: NotDefinedComponent<Options>,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  if (arguments.length === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol(__DEV__ ? `ssrContext` : ``)\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      warn(\r\n        `Server rendering context not provided. Make sure to only call ` +\r\n          `useSsrContext() conditionally in the server build.`\r\n      )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSsrContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import { VNodeChild } from '../vnode'\r\nimport { isArray, isString, isObject } from '@vue/shared'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number\r\n  ) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i)\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i)\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, renderItem)\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i)\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n  return ret\r\n}\r\n","import { isObject, capitalize } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[`on${capitalize(key)}`] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import { Data } from '../component'\r\nimport { Slots, RawSlots } from '../componentSlots'\r\nimport {\r\n  VNodeArrayChildren,\r\n  openBlock,\r\n  createBlock,\r\n  Fragment,\r\n  VNode\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren\r\n): VNode {\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  return (\r\n    openBlock(),\r\n    createBlock(\r\n      Fragment,\r\n      { key: props.key },\r\n      slot ? slot(props) : fallback ? fallback() : [],\r\n      (slots as RawSlots)._ === SlotFlags.STABLE\r\n        ? PatchFlags.STABLE_FRAGMENT\r\n        : PatchFlags.BAIL\r\n    )\r\n  )\r\n}\r\n","import { Slot } from '../componentSlots'\r\nimport { isArray } from '@vue/shared'\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: Slot\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, Slot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined)[]\r\n): Record<string, Slot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw\r\n} from '@vue/reactivity'\r\nexport { computed } from './apiComputed'\r\nexport { watch, watchEffect } from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured\r\n} from './apiLifecycle'\r\nexport { provide, inject } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static } from './vnode'\r\n// Built-in components\r\nexport { Teleport, TeleportProps } from './components/Teleport'\r\nexport { Suspense, SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionProps\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nexport { warn } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren\r\n} from './components/BaseTransition'\r\n\r\n// For devtools\r\nexport { devtools, setDevtoolsHook } from './devtools'\r\n\r\n// Types -------------------------------------------------------------------------\r\n\r\nimport { VNode } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\n// Note: if updating this, also update `types/refBail.d.ts`.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport {\r\n  ReactiveEffect,\r\n  ReactiveEffectOptions,\r\n  DebuggerEvent,\r\n  TrackOpTypes,\r\n  TriggerOpTypes,\r\n  Ref,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  UnwrapRef,\r\n  ShallowUnwrapRef,\r\n  WritableComputedOptions,\r\n  ToRefs,\r\n  DeepReadonly\r\n} from '@vue/reactivity'\r\nexport {\r\n  // types\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle\r\n} from './apiWatch'\r\nexport { InjectionKey } from './apiInject'\r\nexport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction\r\n} from './apiCreateApp'\r\nexport {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren\r\n} from './vnode'\r\nexport {\r\n  Component,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps\r\n} from './component'\r\nexport {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  RenderFunction\r\n} from './componentOptions'\r\nexport {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties\r\n} from './componentProxy'\r\nexport {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction\r\n} from './renderer'\r\nexport { RootHydrateFunction } from './hydration'\r\nexport { Slot, Slots } from './componentSlots'\r\nexport {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes\r\n} from './componentProps'\r\nexport {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments\r\n} from './directives'\r\nexport { SuspenseBoundary } from './components/Suspense'\r\nexport { TransitionState, TransitionHooks } from './components/BaseTransition'\r\nexport {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader\r\n} from './apiAsyncComponent'\r\nexport { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeConstants.ts'\r\nexport { withCtx } from './helpers/withRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { pushScopeId, popScopeId, withScopeId } from './helpers/scopeId'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode\r\n} from './vnode'\r\nexport { toDisplayString, camelize, capitalize } from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport {\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance\r\n} from './componentRenderUtils'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\nimport { normalizeSuspenseChildren } from './components/Suspense'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode,\r\n  normalizeSuspenseChildren\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (__NODE_JS__ ? _ssrUtils : null) as typeof _ssrUtils\r\n","import { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nlet tempContainer: HTMLElement\r\nlet tempSVGContainer: SVGElement\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, isSVG, is): Element =>\r\n    isSVG\r\n      ? doc.createElementNS(svgNS, tag)\r\n      : doc.createElement(tag, is ? { is } : undefined),\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  cloneNode(el) {\r\n    return el.cloneNode(true)\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, isSVG) {\r\n    const temp = isSVG\r\n      ? tempSVGContainer ||\r\n        (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n      : tempContainer || (tempContainer = doc.createElement('div'))\r\n    temp.innerHTML = content\r\n    const first = temp.firstChild as Element\r\n    let node: Element | null = first\r\n    let last: Element = node\r\n    while (node) {\r\n      last = node\r\n      nodeOps.insert(node, parent, anchor)\r\n      node = temp.firstChild as Element\r\n    }\r\n    return [first, last]\r\n  }\r\n}\r\n","import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\r\nimport { camelize } from '@vue/runtime-core'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  if (!next) {\r\n    el.removeAttribute('style')\r\n  } else if (isString(next)) {\r\n    if (prev !== next) {\r\n      style.cssText = next\r\n    }\r\n  } else {\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[]\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important'\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import { isSpecialBooleanAttr } from '@vue/shared'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && value === false)) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n","import { isArray } from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  callWithAsyncErrorHandling\r\n} from '@vue/runtime-core'\r\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow: () => number = Date.now\r\n\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (\r\n  typeof document !== 'undefined' &&\r\n  _getNow() > document.createEvent('Event').timeStamp\r\n) {\r\n  // if the low-res timestamp which is bigger than the event timestamp\r\n  // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n  // and we need to use the hi-res version for event listeners as well.\r\n  _getNow = () => performance.now()\r\n}\r\n\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = Promise.resolve()\r\nconst reset = () => {\r\n  cachedNow = 0\r\n}\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nexport function patchEvent(\r\n  el: Element & { _vei?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el._vei || (el._vei = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n      options\r\n    }\r\n  }\r\n  return [name.slice(2).toLowerCase(), options]\r\n}\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const invoker: Invoker = (e: Event) => {\r\n    // async edge case #6566: inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // the solution is simple: we save the timestamp when a handler is attached,\r\n    // and the handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    const timeStamp = e.timeStamp || _getNow()\r\n    if (timeStamp >= invoker.attached - 1) {\r\n      callWithAsyncErrorHandling(\r\n        patchStopImmediatePropagation(e, invoker.value),\r\n        instance,\r\n        ErrorCodes.NATIVE_EVENT_HANDLER,\r\n        [e]\r\n      )\r\n    }\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\r\nimport { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst nativeOnRE = /^on[a-z]/\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const forcePatchProp: DOMRendererOptions['forcePatchProp'] = (_, key) =>\r\n  key === 'value'\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  isSVG = false,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren\r\n) => {\r\n  switch (key) {\r\n    // special\r\n    case 'class':\r\n      patchClass(el, nextValue, isSVG)\r\n      break\r\n    case 'style':\r\n      patchStyle(el, prevValue, nextValue)\r\n      break\r\n    default:\r\n      if (isOn(key)) {\r\n        // ignore v-model listeners\r\n        if (!isModelListener(key)) {\r\n          patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n        }\r\n      } else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n        patchDOMProp(\r\n          el,\r\n          key,\r\n          nextValue,\r\n          prevChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          unmountChildren\r\n        )\r\n      } else {\r\n        // special case for <input v-model type=\"checkbox\"> with\r\n        // :true-value & :false-value\r\n        // store value as dom properties since non-string values will be\r\n        // stringified.\r\n        if (key === 'true-value') {\r\n          ;(el as any)._trueValue = nextValue\r\n        } else if (key === 'false-value') {\r\n          ;(el as any)._falseValue = nextValue\r\n        }\r\n        patchAttr(el, key, nextValue, isSVG)\r\n      }\r\n      break\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML\r\n    if (key === 'innerHTML') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // spellcheck and draggable are numerated attrs, however their\r\n  // corresponding DOM properties are actually booleans - this leads to\r\n  // setting it with a string \"false\" value leading it to be coerced to\r\n  // `true`, so we need to always treat them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (nativeOnRE.test(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import { warn, getCurrentInstance } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n","import {\r\n  ComponentPublicInstance,\r\n  getCurrentInstance,\r\n  onMounted,\r\n  watchEffect,\r\n  warn,\r\n  VNode,\r\n  Fragment,\r\n  unref\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared/src'\r\n\r\nexport function useCssVars(\r\n  getter: (ctx: ComponentPublicInstance) => Record<string, string>,\r\n  scoped = false\r\n) {\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const prefix =\r\n    scoped && instance.type.__scopeId\r\n      ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n      : ``\r\n\r\n  onMounted(() => {\r\n    watchEffect(() => {\r\n      setVarsOnVNode(instance.subTree, getter(instance.proxy!), prefix)\r\n    })\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(\r\n  vnode: VNode,\r\n  vars: Record<string, string>,\r\n  prefix: string\r\n) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const { isResolved, isHydrating, fallbackTree, subTree } = vnode.suspense!\r\n    if (isResolved || isHydrating) {\r\n      vnode = subTree\r\n    } else {\r\n      vnode.suspense!.effects.push(() => {\r\n        setVarsOnVNode(subTree, vars, prefix)\r\n      })\r\n      vnode = fallbackTree\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    const style = vnode.el.style\r\n    for (const key in vars) {\r\n      style.setProperty(`--${prefix}${key}`, unref(vars[key]))\r\n    }\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars, prefix))\r\n  }\r\n}\r\n","import {\r\n  BaseTransition,\r\n  BaseTransitionProps,\r\n  h,\r\n  warn,\r\n  FunctionalComponent\r\n} from '@vue/runtime-core'\r\nimport { isObject, toNumber, extend } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: typeof TRANSITION | typeof ANIMATION\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots }\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend(\r\n  {},\r\n  (BaseTransition as any).props,\r\n  DOMTransitionPropsValidators\r\n))\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps\r\n): BaseTransitionProps<Element> {\r\n  let {\r\n    name = 'v',\r\n    type,\r\n    css = true,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`\r\n  } = rawProps\r\n\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (!css) {\r\n    return baseProps\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (el: Element, done?: () => void) => {\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      hook && hook(el, resolve)\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!(hook && hook.length > 1)) {\r\n          if (enterDuration) {\r\n            setTimeout(resolve, enterDuration)\r\n          } else {\r\n            whenTransitionEnds(el, type, resolve)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      onBeforeEnter && onBeforeEnter(el)\r\n      addTransitionClass(el, enterActiveClass)\r\n      addTransitionClass(el, enterFromClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      onBeforeAppear && onBeforeAppear(el)\r\n      addTransitionClass(el, appearActiveClass)\r\n      addTransitionClass(el, appearFromClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el, done) {\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveActiveClass)\r\n      addTransitionClass(el, leaveFromClass)\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, leaveFromClass)\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!(onLeave && onLeave.length > 1)) {\r\n          if (leaveDuration) {\r\n            setTimeout(resolve, leaveDuration)\r\n          } else {\r\n            whenTransitionEnds(el, type, resolve)\r\n          }\r\n        }\r\n      })\r\n      onLeave && onLeave(el, resolve)\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      onEnterCancelled && onEnterCancelled(el)\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      onAppearCancelled && onAppearCancelled(el)\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      onLeaveCancelled && onLeaveCancelled(el)\r\n    }\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration']\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) validateDuration(res)\r\n  return res\r\n}\r\n\r\nfunction validateDuration(val: unknown) {\r\n  if (typeof val !== 'number') {\r\n    warn(\r\n      `<transition> explicit duration is not a valid number - ` +\r\n        `got ${JSON.stringify(val)}.`\r\n    )\r\n  } else if (isNaN(val)) {\r\n    warn(\r\n      `<transition> explicit duration is NaN - ` +\r\n        'the duration expression might be incorrect.'\r\n    )\r\n  }\r\n}\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  _vtc?: Set<string>\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)._vtc ||\r\n    ((el as ElementWithTransition)._vtc = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const { _vtc } = el as ElementWithTransition\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)._vtc = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element,\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  cb: () => void\r\n) {\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return cb()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    cb()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el) {\r\n      if (++ended >= propCount) {\r\n        end()\r\n      }\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: typeof TRANSITION | typeof ANIMATION | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type']\r\n): CSSTransitionInfo {\r\n  const styles: any = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: string) => (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay')\r\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration')\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay')\r\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration')\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property'])\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n","import {\r\n  TransitionProps,\r\n  addTransitionClass,\r\n  removeTransitionClass,\r\n  ElementWithTransition,\r\n  getTransitionInfo,\r\n  resolveTransitionProps,\r\n  TransitionPropsValidators\r\n} from './Transition'\r\nimport {\r\n  Fragment,\r\n  VNode,\r\n  warn,\r\n  resolveTransitionHooks,\r\n  useTransitionState,\r\n  getTransitionRawChildren,\r\n  getCurrentInstance,\r\n  setTransitionHooks,\r\n  createVNode,\r\n  onUpdated,\r\n  SetupContext\r\n} from '@vue/runtime-core'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { extend } from '@vue/shared'\r\n\r\ninterface Position {\r\n  top: number\r\n  left: number\r\n}\r\n\r\nconst positionMap = new WeakMap<VNode, Position>()\r\nconst newPositionMap = new WeakMap<VNode, Position>()\r\n\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      const tag = rawProps.tag || Fragment\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = (TransitionGroupImpl as unknown) as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el._moveCb) {\r\n    el._moveCb()\r\n  }\r\n  if (el._enterCb) {\r\n    el._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  if (el._vtc) {\r\n    el._vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (root.nodeType === 1\r\n    ? root\r\n    : root.parentNode) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  ObjectDirective,\r\n  VNode,\r\n  DirectiveHook,\r\n  DirectiveBinding,\r\n  warn\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  isArray,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  invokeArrayFns,\r\n  toNumber\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn = vnode.props!['onUpdate:modelValue']\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    trigger(target, 'input')\r\n  }\r\n}\r\n\r\nfunction trigger(el: HTMLElement, type: string) {\r\n  const e = document.createEvent('HTMLEvents')\r\n  e.initEvent(type, true, true)\r\n  el.dispatchEvent(e)\r\n}\r\n\r\ntype ModelDirective<T> = ObjectDirective<T & { _assign: AssignerFn }>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  beforeMount(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el.value = value == null ? '' : value\r\n    el._assign = getModelAssigner(vnode)\r\n    const castToNumber = number || el.type === 'number'\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      } else if (castToNumber) {\r\n        domValue = toNumber(domValue)\r\n      }\r\n      el._assign(domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (document.activeElement === el) {\r\n      if (trim && el.value.trim() === value) {\r\n        return\r\n      }\r\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n        return\r\n      }\r\n    }\r\n    el.value = value == null ? '' : value\r\n  }\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  beforeMount(el, binding, vnode) {\r\n    setChecked(el, binding, vnode)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el._assign\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  beforeUpdate(el, binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  }\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  beforeMount(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el._assign(getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // use mounted & updated because <select> relies on its children <option>s.\r\n  mounted(el, { value }, vnode) {\r\n    setSelected(el, value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map(getValue)\r\n      el._assign(el.multiple ? selectedVal : selectedVal[0])\r\n    })\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value }) {\r\n    setSelected(el, value)\r\n  }\r\n}\r\n\r\nfunction setSelected(el: HTMLSelectElement, value: any) {\r\n  const isMultiple = el.multiple\r\n  if (isMultiple && !isArray(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\r\n      )\r\n    return\r\n  }\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      option.selected = looseIndexOf(value, optionValue) > -1\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  beforeMount(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'beforeMount')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: 'beforeMount' | 'mounted' | 'beforeUpdate' | 'updated'\r\n) {\r\n  let modelToUse: ObjectDirective\r\n  switch (el.tagName) {\r\n    case 'SELECT':\r\n      modelToUse = vModelSelect\r\n      break\r\n    case 'TEXTAREA':\r\n      modelToUse = vModelText\r\n      break\r\n    default:\r\n      switch (el.type) {\r\n        case 'checkbox':\r\n          modelToUse = vModelCheckbox\r\n          break\r\n        case 'radio':\r\n          modelToUse = vModelRadio\r\n          break\r\n        default:\r\n          modelToUse = vModelText\r\n      }\r\n  }\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms\r\nif (__NODE_JS__) {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n}\r\n","import { hyphenate } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\r\n  return (event: Event, ...args: unknown[]) => {\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n      const guard = modifierGuards[modifiers[i]]\r\n      if (guard && guard(event, modifiers)) return\r\n    }\r\n    return fn(event, ...args)\r\n  }\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = (fn: Function, modifiers: string[]) => {\r\n  return (event: KeyboardEvent) => {\r\n    if (!('key' in event)) return\r\n    const eventKey = hyphenate(event.key)\r\n    if (\r\n      // None of the provided key modifiers match the current event key\r\n      !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)\r\n    ) {\r\n      return\r\n    }\r\n    return fn(event)\r\n  }\r\n}\r\n","import { ObjectDirective } from '@vue/runtime-core'\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  _vod: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el._vod = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  }\r\n}\r\n\r\nif (__NODE_JS__) {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el._vod : 'none'\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp, forcePatchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport { isFunction, isString, isHTMLTag, isSVGTag, extend } from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return renderer || (renderer = createRenderer<Node, Element>(rendererOptions))\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      component.template = container.innerHTML\r\n    }\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container)\r\n    container.removeAttribute('v-cloak')\r\n    container.setAttribute('data-v-app', '')\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\nfunction normalizeContainer(container: Element | string): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(`Failed to mount app: mount target selector returned null.`)\r\n    }\r\n    return res\r\n  }\r\n  return container\r\n}\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import { ElementWithTransition } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  if (value == null) {\r\n    value = ''\r\n  }\r\n  if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = (el as ElementWithTransition)._vtc\r\n    if (transitionClasses) {\r\n      value = (value\r\n        ? [value, ...transitionClasses]\r\n        : [...transitionClasses]\r\n      ).join(' ')\r\n    }\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { warn } from '@vue/runtime-core'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n  if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    el.value = value == null ? '' : value\r\n    return\r\n  }\r\n  if (value === '' && typeof el[key] === 'boolean') {\r\n    // e.g. <select multiple> compiles to { multiple: '' }\r\n    el[key] = true\r\n  } else if (value == null && typeof el[key] === 'string') {\r\n    // e.g. <div :id=\"null\">\r\n    el[key] = ''\r\n    el.removeAttribute(key)\r\n  } else {\r\n    // some properties perform value validation and throw\r\n    try {\r\n      el[key] = value\r\n    } catch (e) {\r\n      if (__DEV__) {\r\n        warn(\r\n          `Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n            `value ${value} is invalid.`,\r\n          e\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","normalizeStyle","value","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","looseEqual","a","b","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","toDisplayString","JSON","stringify","replacer","_key","Map","[object Object]","size","entries","reduce","Set","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toTypeString","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","effect","options","_isEffect","isEffect","raw","active","scheduler","undefined","includes","cleanup","trackStack","push","shouldTrack","pop","resetTracking","id","uid","deps","createReactiveEffect","lazy","stop","onStop","delete","pauseTracking","last","track","target","type","depsMap","get","set","dep","has","add","trigger","newValue","oldTarget","effects","effectsToAdd","isAddOrDelete","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","targetIsArray","Reflect","isRef","readonly","reactive","args","toRaw","this","l","createSetter","hadKey","result","ownKeys","mutableHandlers","deleteProperty","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","wrap","rawKey","proto","deleteEntry","del","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","isMap","isPair","iterator","isKeyOnly","innerIterator","apply","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","collectionTypes","WeakSet","isObservableType","canObserve","toRawType","isExtensible","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","reactiveFlag","Proxy","constructor","isReactive","isProxy","markRaw","convert","r","__v_isRef","ref","createRef","shallowRef","rawValue","newVal","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","customRef","factory","toRefs","object","toRef","stack","warn","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","currentVNode","normalizedStack","vnode","recurseCount","parentInstance","parent","getComponentTrace","callWithErrorHandling","join","proxy","formatComponentName","warnArgs","logs","entry","postfix","open","close","props","formatProps","formatTraceEntry","formatTrace","console","formatProp","err","handleError","callWithAsyncErrorHandling","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","contextVNode","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","queueJob","job","cb","queueFlush","flushJobs","queueCb","activeQueue","pendingQueue","index","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","getId","Infinity","sort","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","slots","attrs","emit","render","renderCache","data","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","some","filterModelListeners","cloneVNode","scopeId","needScopeId","treeOwnerId","__scopeId","slotScopeId","extras","dirs","transition","createVNode","Comment","hasPropsChanged","prevProps","nextProps","nextKeys","updateHOCHostEl","subTree","Suspense","__isSuspense","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","optimized","rendererInternals","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","fallbackTree","mountSuspense","content","fallback","normalizeSuspenseChildren","oldSubTree","oldFallbackTree","isResolved","patchSuspense","hydrate","node","hydrateNode","parentNode","document","isHydrating","m","move","um","unmount","getCurrentTree","isUnmounted","hasUnresolvedAncestor","onResolve","onRecede","setupRenderEffect","recede","hydratedEl","asyncDep","asyncSetupResult","asyncResolved","handleSetupResult","doRemove","children","default","d","queueEffectWithSuspense","withCtx","owner","arguments","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","isTeleportDisabled","disabled","resolveTarget","select","targetSelector","to","moveTeleport","parentAnchor","insert","moveType","targetAnchor","isReorder","Teleport","__isTeleport","internals","mc","mountChildren","pc","patchChildren","pbc","patchBlockChildren","querySelector","createText","placeholder","mainAnchor","mount","wasDisabled","currentContainer","currentAnchor","dynamicChildren","patchFlag","oldChildren","nextTarget","hostRemove","nextSibling","hydrateChildren","targetNode","_lpa","firstChild","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","currentInstance","selfName","displayName","registry","Fragment","Text","Static","blockStack","currentBlock","openBlock","disableTracking","setBlockTracking","createBlock","dynamicProps","isVNode","__v_isVNode","isSameVNodeType","transformVNodeArgs","transformer","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","__vccOpts","class","klass","style","isSuspense","isTeleport","__v_skip","staticCount","extraProps","mergedProps","mergeProps","createTextVNode","text","flag","createStaticVNode","numberOfNodes","createCommentVNode","asBlock","child","cloneIfMounted","slotFlag","_ctx","toMerge","existing","incoming","concat","event","handlerName","handler","emitted","isEmitListener","comp","emits","normalizeEmitsOptions","__emits","hasExtends","extends","mixins","setFullProps","rawProps","needCastKeys","normalizePropsOptions","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","Function","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","Boolean","stringIndex","normalizedEntry","getType","ctor","match","isSameType","expectedTypes","len","injectHook","hook","prepend","hooks","wrappedHook","__weh","setCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","BaseTransition","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","setTransitionHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","__isKeepAlive","KeepAlive","inheritRef","include","RegExp","exclude","max","Number","current","sharedContext","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getName","pruneCacheEntry","cached","activate","queuePostRenderEffect","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","watch","matches","pendingCacheKey","cacheSubtree","cachedVNode","parseInt","pattern","onActivated","registerKeepAliveHook","onDeactivated","__wdc","injectToKeepAliveRoot","keepAliveRoot","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","withDirectives","directives","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","devtools","setDevtoolsHook","createAppContext","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","createAppAPI","rootComponent","rootProps","context","installedPlugins","_component","_props","_container","_context","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","devtoolsUnmountApp","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","needToAdoptContent","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","setRef","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","isFragment","end","prodEffectOptions","rawRef","oldRawRef","oldRef","refs","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","mountElement","patchElement","is","unmountChildren","beforeEnter","needCallTransitionHooks","enter","start","oldProps","newProps","onVnodeBeforeUpdate","patchProps","propsToUpdate","prev","areChildrenSVG","onVnodeUpdated","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","emptyAppContext","accessCache","setupContext","bc","bm","bu","u","bum","rtg","rtc","bind","createComponentInstance","isSSR","isStateful","initProps","initSlots","setupResult","PublicInstanceProxyHandlers","setup","createSetupContext","resolvedResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","leave","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","_vnode","createApp","watchEffect","doWatch","INITIAL_WATCHER_VALUE","source","immediate","deep","flush","onTrack","onTrigger","getter","isRefSource","s","traverse","onInvalidate","baseGetter","runner","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","parentProvides","inject","isInBeforeCreate","applyOptions","deferredData","deferredWatch","asMixin","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","resolveData","dataFn","createWatcher","callHookFromMixins","baseHook","selfHook","mergeOptions","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","$forceUpdate","$nextTick","$watch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","registerRuntimeCompiler","_compile","template","delimiters","_rc","classifyRE","isRoot","__file","inferFromRegistry","getterOrOptions","setter","dirty","__v_isReadonly","_computed","defineComponent","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","timeout","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","__esModule","toStringTag","createInnerComp","loaded","delayed","setTimeout","h","propsOrChildren","ssrContextKey","useSSRContext","renderList","renderItem","toHandlers","renderSlot","slot","createSlots","dynamicSlots","ssrUtils","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","nodeValue","selector","setAttribute","temp","first","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","now","createEvent","timeStamp","cachedNow","reset","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","initialValue","invoker","e","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","useCssModule","modules","mod","useCssVars","scoped","prefix","setVarsOnVNode","vars","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","cls","classList","_vtc","requestAnimationFrame","expectedType","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","window","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","toMs","positionMap","newPositionMap","TransitionGroup","moveClass","clone","display","appendChild","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","number","_assign","castToNumber","domValue","activeElement","vModelCheckbox","setChecked","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","vModelRadio","vModelSelect","setSelected","selectedVal","selected","multiple","_binding","isMultiple","option","optionValue","selectedIndex","_value","vModelDynamic","callModelHook","modelToUse","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","self","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","middle","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","k","vShow","_vod","setDisplay","rendererOptions","transitionClasses","className","patchClass","removeAttribute","patchStyle","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","createSSRApp"],"mappings":"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"}